var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"(Image: JuliaCon 2019) (Image: Grassmann.jl YouTube) (Image: PDF 2019) (Image: PDF 2021) (Image: PDF 2025) (Image: Docs Dev)","category":"page"},{"location":"references/","page":"References","title":"References","text":"Michael Reed, Differential geometric algebra with Leibniz and Grassmann (2019)\nMichael Reed, Foundatons of differential geometric algebra (2021)\nMichael Reed, Multilinear Lie bracket recursion formula (2024)\nMichael Reed, Differential geometric algebra: compute using Grassmann.jl and Cartan.jl (2025)\nEmil Artin, Geometric Algebra (1957)\nJohn Browne, Grassmann Algebra, Volume 1: Foundations (2011)\nC. Doran, D. Hestenes, F. Sommen, and N. Van Acker, Lie groups as spin groups, J. Math Phys. (1993)\nDavid Hestenes, Universal Geometric Algebra, Pure and Applied (1988)\nDavid Hestenes, Renatus Ziegler, Projective Geometry with Clifford Algebra, Acta Appl. Math. (1991)\nDavid Hestenes, Tutorial on geometric calculus. Advances in Applied Clifford Algebra (2013)\nLachlan Gunn, Derek Abbott, James Chappell, Ashar Iqbal, Functions of multivector variables (2011)\nAaron D. Schutte, A nilpotent algebra approach to Lagrangian mechanics and constrained motion (2016)\nVladimir and Tijana Ivancevic, Undergraduate lecture notes in DeRahm-Hodge theory. arXiv (2011)\nPeter Woit, Clifford algebras and spin groups, Lecture Notes (2012)","category":"page"},{"location":"references/","page":"References","title":"References","text":"       _           _                         _\n      | |         | |                       | |\n   ___| |__   __ _| | ___ __ __ ___   ____ _| | __ _\n  / __| '_ \\ / _` | |/ / '__/ _` \\ \\ / / _` | |/ _` |\n | (__| | | | (_| |   <| | | (_| |\\ V / (_| | | (_| |\n  \\___|_| |_|\\__,_|_|\\_\\_|  \\__,_| \\_/ \\__,_|_|\\__,_|\n\n   https://github.com/chakravala\n   https://crucialflow.com\n   ____  ____    ____   _____  _____ ___ ___   ____  ____   ____\n  /    T|    \\  /    T / ___/ / ___/|   T   T /    T|    \\ |    \\\n Y   __j|  D  )Y  o  |(   \\_ (   \\_ | _   _ |Y  o  ||  _  Y|  _  Y\n |  T  ||    / |     | \\__  T \\__  T|  \\_/  ||     ||  |  ||  |  |\n |  l_ ||    \\ |  _  | /  \\ | /  \\ ||   |   ||  _  ||  |  ||  |  |\n |     ||  .  Y|  |  | \\    | \\    ||   |   ||  |  ||  |  ||  |  |\n l___,_jl__j\\_jl__j__j  \\___j  \\___jl___j___jl__j__jl__j__jl__j__j","category":"page"},{"location":"videos/#Grassmann.jl-videos","page":"Videos","title":"Grassmann.jl videos","text":"","category":"section"},{"location":"videos/","page":"Videos","title":"Videos","text":"⟨Grassmann-Clifford-Hodge⟩ multilinear differential geometric algebra","category":"page"},{"location":"videos/","page":"Videos","title":"Videos","text":"(Image: DOI) (Image: Docs Dev) (Image: GitHub tag (latest SemVer)) (Image: Build status) (Image: PDF 2019) (Image: PDF 2021) (Image: PDF 2025)","category":"page"},{"location":"videos/","page":"Videos","title":"Videos","text":"Pages = [\"design.md\",\"algebra.md\",\"library.md\",\"references.md\"]","category":"page"},{"location":"videos/","page":"Videos","title":"Videos","text":"youtube.com/@CrucialFlowResearch, odysee.com/@dreamscatter","category":"page"},{"location":"videos/","page":"Videos","title":"Videos","text":"<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/worMICG1MaI?si=gOBmgMtErWRC8zHm\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/hwOd6ctv67o?si=imjgbuArkuVsKClY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/7hlDRLEhc8o?si=hdmysjRddeZ_XZnP\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/t84X5OBb89g?si=fd6PTVJT5WrpnA6o\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/eQjDN0JQ6-s?si=0iK_9uzOvU27kE2p\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Anc0TBa2vJM?si=fNh2FfZDteuxjBMu\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Z8XiFRcDNYc?si=eXHxiT_AquP69hau\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/14Rf2r6i5xA?si=AP4aMSIf7sk338CD\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/wxAHAe7qpgQ?si=tH9tfmDgWLmClaEO\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0ipBtidZ-F8?si=oWTddiR68lY7u5UA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/yv3SCHdRg0c?si=eCYIqh-N3ImaKQdR\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/cchGLYOphkg?si=VEMFfT5h8M84csyq\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2ofvi5Wq6So?si=P49S-hrLal6r3NsN\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/C-nGcQvWSPE?si=Dpn2-EvEKlTxVwEV\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/GOKfTbExD_Q?si=6UN3RDJ9_yBe7Y7F\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>","category":"page"},{"location":"tutorials/algebra-of-space/#The-Algebra-of-Space-(G3)","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"","category":"section"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"This notebook is an adaptation from the clifford python documentation.","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Import Grassmann and instantiate a three dimensional geometric algebra","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"using Grassmann\nbasis\"3\"","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Given a three dimensional GA with the orthonormal basis v_icdot v_j = delta_ij, the basis consists of scalars, three vectors, three bivectors, and a trivector.","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"underbracev_textscalarqquadunderbracev_1v_2v_3_textvectorsqquadunderbracev_12v_23v_13_textbivectorsqquadunderbracev_123_texttrivector","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"The @basis macro declares the algebra and assigns the Submanifold elements to local variables. The Basis can also be assigned to G3 as","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"G3 = Λ(3)","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"You may wish to explicitly assign the blades to variables like so,","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"e1 = G3.v1\ne2 = G3.v2\n# etc ...","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Or, if you're lazy you can use the macro with different local names","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"@basis ℝ^3 E e\ne3, e123","category":"page"},{"location":"tutorials/algebra-of-space/#Basics","page":"The Algebra of Space (G3)","title":"Basics","text":"","category":"section"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"The basic products are available","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"v1 * v2 # geometric product\nv1 | v2 # inner product\nv1 ∧ v2 # exterior product\nv1 ∧ v2 ∧ v3 # even more exterior products","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Multivectors can be defined in terms of the basis blades. For example, you can construct a rotor as a sum of a scalar and a bivector, like so","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"θ = π/4\nR = cos(θ) + sin(θ)*v23\nR = exp(θ*v23)","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"You can also mix grades without any reason","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"A = 1 + 2v1 + 3v12 + 4v123","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"The reversion operator is accomplished with the tilde ~ in front of the Multivector on which it acts","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"~A","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Taking a projection into a specific grade of a Multivector is usually written langle Arangle_n and can be done using the soft brackets, like so","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"A(0)\nA(1)\nA(2)","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Using the reversion and grade projection operators, we can define the magnitude of A as A^2 = langletilde A Arangle","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"~A*A\nscalar(ans)","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"This is done in the abs and abs2 operators","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"abs2(A)\nscalar(ans)","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"The dual of a multivector A can be defined as tilde AI, where I is the pseudoscalar for the geometric algebra. In G3, the dual of a vector is a bivector:","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"a = 1v1 + 2v2 + 3v3\n⋆a","category":"page"},{"location":"tutorials/algebra-of-space/#Reflections","page":"The Algebra of Space (G3)","title":"Reflections","text":"","category":"section"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Reflecting a vector c about a normalized vector n is pretty simple, cmapsto -ncn","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"c = v1+v2+v3 # a vector\nn = v1 # the reflector\n-n*c*n # reflect a in hyperplane normal to n","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Because we have the inv available, we can equally well reflect in un-normalized vectors using amapsto n^-1an","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"a = v1+v2+v3 # the vector\nn = 3v1 # the reflector\ninv(n)*a*n\nn\\a*n","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Reflections can also be made with respect to the hyperplane normal to the vector, in which case the formula is negated.","category":"page"},{"location":"tutorials/algebra-of-space/#Rotations","page":"The Algebra of Space (G3)","title":"Rotations","text":"","category":"section"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"A vector can be rotated using the formula amapsto tilde R aR, where R is a rotor. A rotor can be defined by multiple reflections, R = mn or by a plane and an angle R = e^theta B2. For example,","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R = exp(π/4*v12)\n~R*v1*R","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Maybe we want to define a function which can return rotor of some angle theta in the v_12-plane, R_12 = e^theta v_122","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R12(θ) = exp(θ/2*v12)\nnothing # hide","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"And use it like this","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R = R12(π/2)\na = v1+v2+v3\n~R*a*R","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"You might as well make the angle argument a bivector, so that you can control the plane of rotation as well as the angle","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R_B(B) = exp(B/2)\nnothing # hide","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Then you could do","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Rxy = R_B(π/4*v12)\nRyz = R_B(π/5*v23)","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"or","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R_B(π/6*(v23+v12))","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Maybe you want to define a function which returns a function that enacts a specified rotation, f(B) = amapsto e^B2ae^B2. This just saves you having to write out the sandwich product, which is nice if you are cascading a bunch of rotors, like so","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R_factory(B) = (R = exp(B/2); a -> ~R*a*R)\nRxy = R_factory(π/3*v12)\nRyz = R_factory(π/3*v23)\nRxz = R_factory(π/3*v13)\nnothing # hide","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"Then you can do things like","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R = R_factory(π/6*(v23+v12)) # this returns a function\nR(a) # which acts on a vector\nRxy(Ryz(Rxz(a)))","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"To make cascading a sequence of rotations as concise as possible, we could define a function which takes a list of bivectors ABC, and enacts the sequence of rotations which they represent on some vector x.","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"R_seq(args...) = (R = prod(exp.(args./2)); a -> ~R*a*R)\nR = R_seq(π/2*v23, π/2*v12, v1)\nR(v1)","category":"page"},{"location":"tutorials/algebra-of-space/#Barycentric-Coordinates","page":"The Algebra of Space (G3)","title":"Barycentric Coordinates","text":"","category":"section"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"We can find the barycentric coordinates of a point in a triangle using area ratios.","category":"page"},{"location":"tutorials/algebra-of-space/","page":"The Algebra of Space (G3)","title":"The Algebra of Space (G3)","text":"function barycoords(p, a, b, c)\n  ab = b-a\n  ca = a-c\n  bc = c-b\n  A = -ab∧ca\n  (bc∧(p-b)/A, ca∧(p-c)/A, ab∧(p-a)/A)\nend\nbarycoords(0.25v1+0.25v2, 0v1, 1v1, 1v2)","category":"page"},{"location":"algebra/#Grassmann-elements-and-geometric-algebra-Λ(V)","page":"Algebra","title":"Grassmann elements and geometric algebra Λ(V)","text":"","category":"section"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Vector space Lambda^1 V = V is a field's mathbb K-module instance). \tLet V be a mathbb K-module (abelian group with respect to +) with an element 1inmathbb K such that 1V = V by scalar multiplication mathbb Ktimes Vrightarrow V over field mathbb K satisfying","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"a(x+y) = ax+ ay distribution of vector addition,\n(a+b)x = ax + bd distribution of field addition,\n(ab)x = a(bx) associative compatibility.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"In the software package Grassmann, a generating vector space mathbbK-module is specified as a value of <:TensorBundle (an abstract type).","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Linear dependence). \tLet V be a vector space over field mathbb K, then the set v_i_i is linearly dependent if and only if sum_i=1^n k_iv_i = 0 for some 0ne kinmathbb K^n.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (wedge-product annihilation). \tFor a linearly dependent set v_i_1^nsubset V ","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"v_1wedge v_2wedgedotswedge v_n = 0","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Initially, it is enough to understand that wedgeLambda^n VtimesLambda^m VrightarrowLambda^n+mV is an operation which is zero for linearly dependent arguments.  However, this idea comes from extending Grassmann's product v_iwedge v_j = -v_jwedge v_i implies v_iwedge v_i = 0 = -v_iwedge v_i to yield a tool for characterizing linear dependence.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Dimension n-Submanifold in Lambda^n V). \tNote that writing the product v_1wedge v_2wedgecdotswedge v_nne0 implies a linearly independent set v_i_1^nsubseteq V isomorphic to an n-Submanifold.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Furthermore, mathbbKtimesv_1wedge v_2wedgecdotswedge v_ncongmathbbK shows the 1-dimensional basis subspace is induced by any n-Submanifold.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Example. Therefore, mathbb K = Lambda^0mathbb K cong Lambda^1mathbb K is a vector space or a 0-Submanifold.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Example. Lambda^n V is a vector space with Lambda^1Lambda^n V = Lambda^nV and Lambda^0Lambda^nV = Lambda^0V.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Denote V^* = Vbackslash0 as the set V excluding the 0 element in next:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Direct sum oplus). \tTo consider a set of linearly independent spaces, \tlet pi_i Vrightarrow V_i be projections with vector space V_isubset V, define","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"V_1oplus V_2opluscdotsoplus V_n = V iff\nbigwedge  V_1^*times V_2^*timescdotstimes V_n^* rightarrow Lambda^n V^* ","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"DirectSum of a full  non-zero product implies an n-Submanifold.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Ddefinition \tGrade-m projection is defined as langleLambda Vrangle_m = Lambda^m V such that","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Lambda V = bigoplus_m=0^n langleLambda Vrangle_m = Lambda^0VoplusLambda^1VopluscdotsoplusLambda^nV qquad langleLambda Vrangle_m = bigoplus_m=1^nchoose mmathbb K","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Note that dim langleLambda Vrangle_m = nchoose m and hence dimLambda V = sum_m=0^n nchoose m = 2^n.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Example (Combinatorics of power set mathcal P(V)). Let v_1v_2v_3 inmathbb R^3, then the power set of elements is:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"mathcal P(mathbb R^3) = emptysetv_1v_2v_3v_1v_2v_1v_3v_2v_3v_1v_2v_3","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Form a direct sum over the elements of mathcal P(V) with wedge to define Lambda V, e.g.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Lambda(mathbb R^3) = Lambda^0(mathbb R^3)oplusLambda^1(mathbb R^3)oplusLambda^2(mathbb R^3)oplusLambda^3(mathbb R^3)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"overbracev_emptyset^Lambda^0mathbb Roplus overbracev_1oplus v_2oplus v_3^Lambda^1(mathbb R^3)oplusoverbrace(v_1wedge v_2)oplus (v_1wedge v_3) oplus (v_2wedge v_3)^Lambda^2(mathbb R^3)oplusoverbrace(v_1wedge v_2wedge v_3)^Lambda^3(mathbb R^3)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The Grassmann Submanifold elements v_kinLambda^1V and w^kinLambda^1V are linearly independent vector and covector elements of V, while the Leibniz Operator elements partial_kin L^1V are partial tangent derivations and epsilon_kin L^1V are dependent functions of the tangent manifold. Let VintextVect_mathbb k be a TensorBundle with dual space V and the basis elements w_kVrightarrowmathbb K, then for all xin Vcinmathbb K it holds: (w^i+w^j)(x) = w^i(x)+w^j(x) and (cw^k)(x) = cw^k(x) hold. An element of a mixed-symmetry TensorAlgebra{V} is a multilinear mapping that is formally constructed by taking the tensor products of linear and multilinear maps, (bigotimes_k omega_k)(v_1dotsv_sum_k p_k) = prod_k omega_k(v_1dotsv_p_k). Higher grade elements correspond to Submanifold subspaces, while higher order function elements become homogenous polynomials and Taylor series.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Λ(ℝ^3)\n\nΛ(tangent(ℝ^2))\n\nΛ(tangent((ℝ^0)',3,3))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Combining the linear basis generating elements with each other using the multilinear tensor product yields a graded (decomposable) tensor Submanifold langle v_i_1otimescdotsotimes v_i_krangle_k  V^krightarrowmathbb K, where rank is determined by the sum of basis index multiplicities in the tensor product decomposition. The Grassmann anti-symmetric exterior basis is denoted by v_i_1dots i_ginLambda^gV having the dual elements w^i_1cdots i_ginLambda^gV, while the Leibniz symmetric basis will be denoted by partial_i_1^mu_1dotspartial_i_g^mu_gin L^gV with corresponding epsilon_i_1^mu_1dotsepsilon_i_g^mu_gin L^gV adjoint elements. Combined, this space produces the full Leibniz tangent algebra T^mu V=Voplus (bigoplus_g=1^mu L^g V) and the Grassmann exterior algebra Lambda V = bigoplus_g=1^nLambda^g V with 2^n elements. The mixed index algebra Lambda(T^mu V) = (bigoplus_g=1^nLambda^g V)oplus(bigoplus_g=1^mu L^g V) is partitioned into both symmetric and anti-symmetric tensor equivalence classes. Any mixed tensor Submanifold pair omegaeta satisfies either","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"underbraceomegaotimeseta = -etaotimesomega_textanti-symmetric qquad textor qquad  underbraceomegaotimeseta = etaotimesomega_textsymmetric","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"For the oriented sets of the Grassmann exterior algebra, the parity of (-1)^Pi is factored into transposition compositions when interchanging ordering of the tensor product argument permutations. The symmetrical algebra does not need to track this parity, but has higher multiplicities in its indices. Symmetric differential function algebra of Leibniz trivializes the orientation into a single class of index multi-sets, while Grassmann's exterior algebra is partitioned into two oriented equivalence classes by anti-symmetry. Full tensor algebra can be sub-partitioned into equivalence classes in multiple ways based on the element symmetry, grade, and metric signature composite properties. Both symmetry classes can be characterized by the same geometric product.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"indices(Λ(3).v12)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"A higher-order composite tensor element is an oriented-multi-set X such that v_X = bigotimes_k v_i_k^otimesmu_k with the indices X = left((i_1mu_1)dots(i_gmu_g)right) and X=sum_kmu_k is tensor rank. Anti-symmetric indices Lambda XsubseteqLambda V have two orientations and higher multiplicities of them result in zero values, so the only interesting multiplicity is mu_kequiv1. The Leibniz-Taylor algebra is a quotient polynomial ring LVcong Rx_1dotsx_nprod_k=1^mu+1 x_p_k so that partial_k^mu+1 is zero. Typically the k in a product left(partial_p_1otimescdotsotimespartial_p_kright)^(k) is referred to as the order of the element if it is fully symmetric, which is overall tracked separately from the grade such that partial_klangle v_jrangle_r = langlepartial_kv_jrangle_r and (partial_k)^(r)omega_j = (partial_kv_j)^(r). There is a partitioning into even grade components omega_+ and odd grade components omega_- such that omega_++omega_-=omega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Grassmann's exterior algebra doesn't invoke the properties of multi-sets, as it is related to the algebra of oriented sets; while the Leibniz symmetric algebra is that of unoriented multi-sets. Combined, the mixed-symmetry algebra yield a multi-linear propositional lattice. The formal sum of equal grade elements is an oriented Chain and with mixed grade it is a Multivector simplicial complex. Thus, various standard operations on the oriented multi-sets are possible including cupcapoplus and the index operation ominus, which is symmetric difference operation.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Grassmann's exterior product is an anti-symmetric tensor product","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"v_i wedge v_j = - v_jwedge v_i implies v_iwedge v_i = 0 = -v_iwedge v_i","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"which generalizes the multilinear determinant transposition property","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"v_omega_1wedgecdotswedge v_omega_mwedge v_eta_1wedgecdotswedge v_eta_n = (-1)^mn v_eta_1 wedge cdots wedge v_eta_n wedge v_omega_1 wedge cdots wedge v_omega_m","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Hence for graded elements it is possible to deduce that","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"omega in Lambda^mVquadetainLambda^nV  qquad omegawedgeeta = (-1)^mnetawedgeomega","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. Observe the anti-symmetry property implies that omegaotimesomega = 0, while the symmetric property neither implies nor denies such a property.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Example. Case of 3rd order tangent bundle operators composition:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"T^3(Lambda^0V) = partial_emptyset oplus partial_1opluspartial_2opluspartial_3 oplus (partial_1circpartial_2) oplus (partial_1circpartial_3) oplus (partial_2circpartial_3) oplus (partial_1circpartial_2circpartial_3)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"In order to shorten the notation, the operation symbol is left out:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"v_1v_2v_3v_12v_13v_23v_123 partial_1partial_2partial_3partial_12partial_13partial_23partial_123","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The canonical choice of orientation is with indices in sorted order, so that for example anti-symmetry is applied to rewrite v_21 = -v_12 or the property partial_2circpartial_1 = partial_1circpartial_2 is applied for differential operators. In general, permutations of the indices get rendered as orientations of (-1)^k of a basis mathbbK-module.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Permutations). Consider displaystylesigma_j(omega) = sum_k=0^n(-1)^binomk2^j-1langleomegarangle_k,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"sigma_1(omega) equiv overlineomega qquad sigma_2(omega) equiv widetildeomega qquad sigma_12 = sigma_2(sigma_1(omega)) equiv widetildeoverlineomega","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (mathfrakS_j = langlesigma_1sigma_2dotssigma_jrangle is a group).     mathfrakS_2 = 1sigma_1sigma_2sigma_12 \tis a set of automorphisms: grade involution overlineomega = sigma_1(omega) = sum_k=0^n (-1)^binomk1langleomegarangle_k, \treverse widetildeomega = sigma_2(omega) = sum_k=0^n (-1)^binomk2langleomegarangle_k = sum_k=0^n (-1)^(k-1)k2langleomegarangle_k is an anti-automorphism with sigma_2(v_iwedge v_j) = sigma_2(v_j)wedgesigma_2(v_i), and Clifford conjugate widetildeoverlineomega is the composition of grade involution and reverse anti-automorphism.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Real widetildemathfrakRomega = (omega + widetildeomega)2 and imaginary widetildemathfrakIomega = (omega - widetildeomega)2). Real and imaginary define mathbbZ_2-grading projections so that Lambda V = widetildemathfrakRLambda V oplus widetildemathfrakILambda V; \twhere widetildemathfrakRLambda V is the real part and widetildemathfrakILambda V is the imag (imaginary) part.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Even overlinemathfrakRomega = (omega + overlineomega)2 and odd overlinemathfrakIomega = (omega - overlineomega)2). Even and odd define mathbbZ_2-grading projections so that Lambda V = overlinemathfrakRLambda V oplus overlinemathfrakILambda V; \twhere overlinemathfrakRLambda V is the even part and overlinemathfrakILambda V is the odd part.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"In general, this can be extended to mathbbZ_2-grading projections sigma_j and its real sigma_j(mathfrakR)omega = (omega + sigma_j(omega))2 and imaginary sigma_j(mathfrakI)omega = (omega-sigma_j(omega))2 parts.","category":"page"},{"location":"algebra/#Grassmann.jl-API-design-overview","page":"Algebra","title":"Grassmann.jl API design overview","text":"","category":"section"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Grassmann.jl is a foundation which has been built up from a minimal mathbbK-module algebra kernel on which an entirely custom algbera specification is designed and built from scratch on the base Julia language.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition. TensorAlgebra{V,mathbbK} where V::Submanifold{M} for a generating mathbbK-module specified by a M::TensorBundle choice","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"TensorBundle specifies generators of DirectSum.Basis algebra\nInt value induces a Euclidean metric of counted dimension\nSignature uses S\"...\" with + and - specifying the metric\nDiagonalForm uses D\"...\" for defining any diagonal metric\nMetricTensor can accept non-diagonal metric tensor array\nTensorGraded{V,G,mathbbK} has grade G and element of Lambda^GV subspace\nChain{V,G,mathbbK} has a complete basis for Lambda^GV with mathbbK-module\nSimplex{V} alias column-module Chain{V,1,Chain{V,1,mathbbK}}\nTensorTerm{V,G,mathbbK} <: TensorGraded{V,G,mathbbK} single coefficient\nZero{V} is a zero value which preserves V in its algebra type\nSubmanifold{V,G,B} langle v_i_1wedgecdotswedge v_i_Grangle_G with sorted indices B\nSingle{V,G,B,mathbbK} where B::Submanifold{V} is paired to mathbbK\nAbstractSpinor{V,mathbbK} subtypes are special sub-algebras of Lambda V\nCouple{V,B,mathbbK} is the sum of mathbbK scalar with Single{V,G,B,mathbbK}\nPseudoCouple{V,B,mathbbK} is pseudoscalar + Single{V,G,B,mathbbK}\nSpinor{V,mathbbK} has complete basis for the even mathbbZ_2-graded terms\nCoSpinor{V,mathbbK} has complete basis for odd mathbbZ_2-graded terms\nMultivector{V,mathbbK} has complete basis for all Lambda V with mathbbK-module","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition. TensorNested{V,T} subtypes are linear transformations","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"TensorOperator{V,W,T} linear map Vrightarrow W with T::DataType\nEndomorphism{V,T} linear map Vrightarrow V with T::DataType\nDiagonalOperator{V,T} diagonal map Vrightarrow V with T::DataType\nDiagonalMorphism{V,<:Chain{V,1}} diagonal map Vrightarrow V\nDiagonalOutermorphism{V,<:Multivector{V}} Lambda Vrightarrow Lambda V\nOutermorphism{V,T} extends Fin Endomorphism{V} to full Lambda V","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"F(v_1)wedgecdotswedge F(v_n) = F(v_1wedgecdotswedge v_n)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Projector{V,T} linear map FVrightarrow V with F(F) = F defined","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"verbProj(xTensorGraded) = fracxxotimesfracxx","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Dyadic{V,X,Y} linear map Vrightarrow V with Dyadic(x,y) = xotimes y","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Grassmann.jl was first to define a comprehensive TensorAlgebra{V} type system from scratch around the idea of the V::Submanifold{M} value to express algebra subtypes for a specified mathbbK-module structure.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition. Common unary operations on TensorAlgebra elements","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Manifold returns the parameter V::Submanifold{M} mathbbK-module\nmdims dimensionality of the pseudoscalar V of that TensorAlgebra\ngdims dimensionality of the grade G of V for that TensorAlgebra\ntdims  dimensionality of Multivector{V} for that TensorAlgebra\ngrade returns G for TensorGraded{V,G} while grade(x,g) is langle xrangle_g\nistensor returns true for TensorAlgebra elements\nisgraded returns true for TensorGraded elements\nisterm returns true for TensorTerm elements\ncomplementright Euclidean metric Grassmann right complement\ncomplementleft Euclidean metric Grassmann left complement\ncomplementrighthodge Grassmann-Hodge right complement widetildeomega I\ncomplementlefthodge Grassmann-Hodge left complement Iwidetildeomega\nmetric applies the metricextensor as outermorphism operator\ncometric applies complement metricextensor as outermorphism\nmetrictensor returns gVrightarrow V associated to TensorAlgebra{V}\nmetrictextensor returns Lambda gLambda VrightarrowLambda V for TensorAlgebra{V}\ninvolute grade permutes basis with langleoverlineomegarangle_k = sigma_1(langleomegarangle_k) = (-1)^klangleomegarangle_k\nreverse permutes basis with langlewidetildeomegarangle_k = sigma_2(langleomegarangle_k) = (-1)^k(k-1)2langleomegarangle_k\nclifford conjugate of an element is composite involute circ reverse\neven part selects overlinemathfrakRomega = (omega + overlineomega)2 and is defined by Lambda^g for even g\nodd part selects overlinemathfrakIomega = (omega-overlineomega)2 and is defined by Lambda^g for odd g\nreal part selects widetildemathfrakRomega = (omega+widetildeomega)2 and is defined by widetildemathfrakRomega^2 = (widetildemathfrakRomega)^2\nimag part selects widetildemathfrakIomega = (omega-widetildeomega)2 and is defined by widetildemathfrakIomega^2 = -(widetildemathfrakIomega)^2\nabs is the absolute value omega=sqrtwidetildeomegaomega and abs2 is then omega^2 = widetildeomegaomega\nnorm evaluates a positive definite norm metric on the coefficients\nunit applies normalization defined as unit(t) = t/abs(t)\nscalar selects grade 0 term of any TensorAlgebra element\nvector selects grade 1 terms of any TensorAlgebra element\nbivector selects grade 2 terms of any TensorAlgebra element\ntrivector selects grade 3 terms of any TensorAlgebra element\npseudoscalar max. grade term of any TensorAlgebra element\nvalue returns internal Values tuple of a TensorAlgebra element\nvaluetype returns type of a TensorAlgebra element value's tuple","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Binary operations commonly used in Grassmann algebra syntax","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"+ and - carry over from the mathbbK-module structure associated to mathbbK\nwedge is exterior product wedge and \\verbvee is regressive product vee\n> is the right contraction and < is the left contraction for Lambda V\n* is the geometric product and / uses \\verbinv algorithm for division\noslash is the sandwich and >>> is its alternate operator orientation","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Custom methods related to tensor operators and roots of polynomials","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"inv returns the inverse and adjugate returns transposed cofactor\ndet returns the scalar determinant of an endomorphism operator\ntr returns the scalar trace of an endomorphism operator\ntranspose operator has swapping of row and column indices\ncompound(F,g) is multilinear endomorphism Lambda^gF  Lambda^g VrightarrowLambda^g V\noutermorphism(A) transforms AVrightarrow V into Lambda ALambda VrightarrowLambda V\noperator make linear representation of multivector outermorphism\ncompanion matrix of monic polynomial a_0+a_1z+dots+a_nz^n + z^n+1\nroots(a...) of polynomial with coefficients a_0 + a_1z + dots + a_nz^n\nrootsreal of polynomial with coefficients a_0 + a_1z + dots + a_nz^n\nrootscomplex of polynomial with coefficients a_0 + a_1z + dots + a_nz^n\nmonicroots(a...) of monic polynomial a_0+a_1z+dots+a_nz^n + z^n+1\nmonicrootsreal of monic polynomial a_0+a_1z+dots+a_nz^n + z^n+1\nmonicrootscomplex of monic polynomial a_0+a_1z+dots+a_nz^n + z^n+1\ncharacteristic(A) polynomial coefficients from det (A-lambda I)\neigvals(A) are the eigenvalues lambda_1dotslambda_n so that A e_i = lambda_i e_i\neigvalsreal are real eigenvalues lambda_1dotslambda_n so that A e_i = lambda_i e_i\neigvalscomplex are complex eigenvalues lambda_1dotslambda_n so A e_i = lambda_i e_i\neigvecs(A) are the eigenvectors e_1dotse_n so that A e_i = lambda_i e_i\neigvecsreal are real eigenvectors e_1dotse_n so that A e_i = lambda_i e_i\neigvecscomplex are complex eigenvectors e_1dotse_n so A e_i = lambda_i e_i\neigen(A) spectral decomposition sum_i lambda_itextProj(e_i) with A e_i = lambda_i e_i\neigenreal spectral decomposition sum_i lambda_itextProj(e_i) with A e_i = lambda_i e_i\neigencomplex spectral decomposition sum_i lambda_itextProj(e_i) so A e_i = lambda_i e_i\neigpolys(A) normalized symmetrized functions of eigvals(A)\neigpolys(A,g) normalized symmetrized function of eigvals(A)\nvandermonde facilitates ((XX)^-1 X)y for polynomial coefficients\ncayley(V,circ) returns product table for V and binary operation circ","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Accessing metrictensor(V) produces a linear map g Vrightarrow V which can be extended to Lambda gLambda VrightarrowLambda V outermorphism given by metricextensor. To apply the metricextensor to any Grassmann element of Lambda V, the function metric can be used on the element, cometric applies a complement metric.","category":"page"},{"location":"algebra/#Grassmann-Hodge-complement","page":"Algebra","title":"Grassmann-Hodge complement","text":"","category":"section"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"John Browne has discussed the Grassmann duality principle, stating that every theorem (involving either of the exterior and regressive products) can be translated into its dual theorem by replacing the wedge and vee operations and applying Grassmann complements!","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Grassmann  complement). Expressed as unary operator, \"right hand rule\" is derived from John Browne's common factor theorem, given a pseudoscalar langle v_1wedgecdotswedge v_nrangle_nin Lambda^n V the linear map Lambda^mV ra Lambda^n-mV","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"langle v_i_1wedgecdotswedge v_i_mrangle_m quad mapsto quad (-1)^fracm(m+1)2 + sum_j=1^m i_j langlebigwedge_kne i_j v_krangle_n-m","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"also denoted as complementright for \"right hand rule.\" While the linear inverse of  is a similar map complementleft expressible by re-orientation:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"langle v_i_1wedgecdotswedge v_i_mrangle_m quad mapsto quad (-1)^m(n-1)langle v_i_1wedgecdotswedge v_i_mrangle_m","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Together, these form an orthocomplementary propositional lattice wedgevee","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(bigvee_komega_k)(v_1dotsv_n) = (bigwedge_k omega_k)(v_1dotsv_n) quad DeMorgansLaw","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"where the regressive product vee satisfies the Grassmann laws with  and wedge.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Hodge star complement). Expressed as unary operator star, define the composition of star = complementright circ metric as linear operator.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"star =Lambda g  Lambda V rightarrow Lambda V","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"This linear operator is also called complementrighthodge or only hodge.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. Original Grassmann complement is equivalent to the Hodge complement with a Euclidean metric tensor, making metric an identity.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition. The interior contraction etacdotomega = etaveestaromega is defined in terms of the regressive product and also the Hodge complement. By default the right contraction  is used, but there is also a left contraction  with swapped arguments etaomega = omegaveestareta, and also eta  omega = widetildeeta omega with eta  omega = eta widetildeomega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. Using coupled subspaces in the block matrix structure of metric tensors, a basis element can be factorized in a corresponding way. In particular, for the diagonal metric this is simply the basis index factorization. However, a non-diagonal metric induces a more complex block factorization.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Clifford geometric product). If a_i is an indecomposable basis element with regards to the block matrix structure of the metric tensor and BinLambda^kV is a graded element, then define operation ominus as either","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"    a_iominus B = a_iwedge B + a_iwidetilde B qquad\n    Bominus a_i = Bwedge a_i + widetilde Ba_i","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"If A = a_1wedgecdotswedge a_m are a basis factorization, then a_1ominuscdotsominus a_m = a_1wedgecdotswedge a_m. Furthermore, if also a_1ominusdotsominus(a_mominus B) = a_1ominusdotsominus(a_mwedge B+a_mwidetilde B) can be expanded to distribute the operations of Aominus B. By applying this principle with the distributive law over the basis of Lambda V, the Clifford product is defined. In Julia, the multiplication symbol * can be used for geometric products.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Diagonal geometric product). The diagonal geometric product is the oriented symmetric difference operator ominus (weighted by the bilinear form g) and multi-set sum oplus applied to multilinear tensor products otimes in a single operation.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"omega_Xominus eta_Y = underbraceoverbrace(-1)^Pi(XY)^textorient parityoverbracedetleftg_Lambda(Xcap Y)right^textintersect metric (overbracebigotimes_kin Lambda(Xominus Y) v^i_k^(Xcup Y)backslash(Xcap Y)_Lambda^1-anti-symmetric Lambda^g-mixed-symmetry)otimes (underbraceoverbracebigotimes_kin L(Xoplus Y) partial_i_k^otimesmu_k^textmulti-set sum_L^g-symmetric)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark: The product symbol ominus will be used to denote explicitly usage of the diagonal geometric product, although the standard number product * notation could also be used. The ominus choice helps emphasize that the diagonal geometric product is characterized by symmetric differencing of anti-symmetric indices.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. For any v_i in Lambda^1V, we define v_i^2 = v_iv_i = g_ii, so typically the diagonal metric g of the algebra is often defined by relations like these.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The elements of the Basis can be generated in many ways using the Submanifold elements created by the @basis macro,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann; @basis ℝ'⊕ℝ^3 # equivalent to basis\"-+++\"","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"As a result of this macro, all of the Submanifold{V,G} elements generated by that TensorBundle become available in the local workspace with the specified naming. The first argument provides signature specifications, the second argument is the variable name for the TensorBundle, and the third and fourth argument are prefixes of the Submanifold vector names (and covector basis names). By default, V is assigned the TensorBundle and v is the prefix for the Submanifold elements.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"V # Minkowski spacetime\ntypeof(V) # dispatch by vector space\ntypeof(v13) # extensive type info\n2v1 + v3 # vector Chain{V,1} element\n5 + v2 + v234 # Multivector{V} element","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"It is entirely possible to assign multiple different bases with different signatures without any problems. In the following command, the @basis macro arguments are used to assign the vector space name to S instead of V and basis elements to b instead of v, so that their local names do not interfere:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"@basis \"++++\" S b;\nlet k = (b1 + b2) - b3\n   for j ∈ 1:9\n\t   k = k * (b234 + b134)\n\t   println(k)\nend end","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Alternatively, if you do not wish to assign these variables to your local workspace, the versatile constructors of DirectSum.Basis{V} can be used to contain them, which is exported to the user as the method Λ(V),","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"G3 = Λ(3) # equivalent to Λ(V\"+++\"), Λ(ℝ^3), Λ.V3\nG3.v13 ⊖ G3.v12","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The multiplication product used: * or ominus is the geometric algebraic product.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(1 + 2v34) ⊖ (3 + 4v34), (1 + 2v34) * (3 + 4v34), (1 + 2im) * (3 + 4im)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Symmetry properties of the tensor algebra can be characterized in terms of the geometric product by two averaging operations, which are the symmetrization odot and anti-symmetrization boxtimes operators. These products satisfy various Multivector properties, including the associative and distributive laws.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition. The geometric product can be applied in two averaging operations, which are symmetrization and anti-symmetrization operations:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"bigodot_k=1^jomega_k = frac1j sum_sigmain S_j prodomega_sigma(k) qquad bigwedge_k=1^j omega_k = sum_sigmain S_j frac(-1)^varepsilon(sigma)j prod_komega_sigma(k)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Exterior product): Let w_kinLambda^p_kV, then for all sigmain S_sum p_k define an equivalence relation sim such that","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"bigwedge_k omega_k(v_1dotsv_p_k) sim (-1)^Pi(sigma)(bigotimes_k omega_k)(v_sigma(1)dotsv_sigma(sum p_k))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"if and only if ominus_komega_k = boxtimes_komega_k holds. It has become typical to use the wedge product symbol to denote products of such elements as bigwedgeLambda V equiv bigotimesLambda Vsim modulo anti-symmetrization.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"v3 ∧ v4, v4 ∧ v3, v3 ∧ v3","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. Observe that the anti-symmetric property implies that omegaotimesomega=0, while the symmetric property neither implies nor denies such a property. Grassmann remarked in 1862 that the symmetric algebra of functions is by far more complicated than his anti-symmetric exterior algebra. The first part of the book focused on anti-symmetric exterior algebra, while the more complex symmetric function algebra of Leibniz was subject of the second multivariable part of the book. Elements omega_k in the space Lambda V of anti-symmetric algebra are often studied as unit quantum state vectors in a unitary probability space, where sum_komega_kneqbigotimes_komega_k is entanglement.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Example (Reverse, involute, conjugate). The reverse of langleomegarangle_r is defined as langletildeomegarangle_r = (-1)^(r-1)r2langleomegarangle_r, while the involute is langleomegarangle_r^times=(-1)^rlangleomegarangle_r and clifford  langleomegarangle_r^ddagger is the composition of involute and reverse.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"clifford(v234) == involute(~v234)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Reversed product). Consider the reversed product langlewidetildeomegaomegarangle.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"omega^2 = langlewidetildeomegaomegarangle qquad omega = sqrtlanglewidetildeomegaomegarangle qquad omega = textEuclidean  omega","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. In general sqrtomega = e^(logomega)2 is valid for invertible omega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Example (Inverse). omega^-1 = widetildeomega(widetildeomegaomega)^-1 = widetildeomegaomega^2, with etaomega = etaomega^-1 and etabackslashomega = eta^-1omega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"1/v34, inv(v34) == ~v34/abs2(v34)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Sandwich product). Define operator as etaoslashomega = overlineomega^-1etaomega. Alternatively, the reversed definition is etaomegaoverlineeta^-1 typically notated eta >>> omega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(2v3+5v4) ⊘ v3 == inv(v3)*(2v3+5v4)*involute(v3)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The real part Reomega = (omega+tildeomega)2 is defined by Reomega^2 = (Reomega)^ominus2 and the imag part Imomega = (omega-tildeomega)2 by Imomega^2 = -(Imomega)^ominus2, such that omega = Reomega+Imomega has real and imaginary partitioned by","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"langlewidetildeomegarangle_rleftlangleomegarangle_rright = sqrtlanglewidetildeomegarangle_r^2leftlangleomegarangle_rright^2 = sqrtlanglewidetildeomegarangle_rlangleomegarangle_r = sqrt(-1)^(r-1)r2 in set1sqrt-1","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"which is a unique partitioning completely independent of the metric space and manifold of the algebra.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"widetildeomegaomega = omega^2 = mathfrak Romega + mathfrak Iomega^2 = mathfrak Romega^2 + mathfrak Iomega^2 + 2mathfrak R(mathfrak Romegamathfrak Iomega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Since langle(widetildeomega+omega)(omega+widetildeomega)rangle = (omega+widetildeomega)^2, it follows mathfrakRomega^2 = (mathfrakRomega)^2. Similarly, langle(widetildeomega-omega)(omega-widetildeomega)rangle = -(omega+widetildeomega)^2 implies mathfrakIomega^2 = -(mathfrakIomega)^2. Due to the mathbbZ_2-grading induced by omega = mathfrakRomega + mathfrakIomega, it has real and imaginary.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"It is possible to assign the quaternion generators ijk with","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"i,j,k = hyperplanes(ℝ^3)\ni^2, j^2, k^2, i*j*k\n-(j+k) * (j+k)\n-(j+k) * i","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Alternatively, another representation of the quaternions is","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"basis\"--\"\nv1^2, v2^2, v12^2, v1*v2*v12","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The parametric type formalism in Grassmann is highly expressive to enable the pre-allocation of geometric algebra computations for specific sparse-subalgebras, including the representation of rotational groups, Lie bivector algebras, and affine projective geometry. All of this is enabled by the psuedoscalar complement duality.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Lemma Let omegainLambda^m V, then Iveeomega = omega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Lemma proved by Michael Reed in Grassmann.jl research papers.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Corollary. Observe, staromega = widetildeomega I = Icdotomega since Icdotomega = Iveestaromega = staromega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem. Let omegainLambda^m V, then starstaromega = (-1)^m(n-m)omega I^2.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Theorem proved by Michael Reed in Grassmann.jl research papers.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Corollary (Euclidean complement of a complement). \tLet omegainLambda^m(mathbb R^n), then starstaromega = (-1)^m(n-m)omega since I^2=1.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem. \tLet omegainLambda^m V, then (omegaveestaromega)I = omegawedgestaromega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Theorem proved by Michael Reed in Grassmann.jl research papers.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem. \tetawedgestaromega = (widetildeomegaveestarwidetildeeta)I = (widetildeomegacdotwidetildeeta)I iff etacdotomega = etaveestaromega = (widetildeomegawedgestarwidetildeeta)I.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem. \tLet etaomegainLambda^mV, then tildeetacdottildeomega = etacdotomega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Corollary (Absolute value omega^2=omegacdotomega).","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(omegacdotomega)I = tildeomegawedgestartildeomega = tildeomegastartildeomega = tildeomegaomega I = omega^2I iff omegacdotomega = tildeomegaomega","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (Hodge complement). Let omegainLambda^mV, then omegawedgestaromega = langleomegaveestaromegarangle I.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Theorem proved by Michael Reed in Grassmann.jl research papers.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The expressions can also be reversed: omegawedgestaromega = omegastaromega = omegatildeomega I = omega^2I. However, when etainLambda^rV and omegainLambda^sV are of unequal grade, then there exist several possible variations of graded contraction operations. Of course, the most natural option for the interior contraction is Grassmann's right contraction also written eta omega = etaveestaromega. However, many authors such as Dorst prefer the Conventional contraction, which is one of the other variations.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Contraction left(etaomega) right(etaomega)\nGrassmann langleetarangle_s  langleomegarangle_r = langletildeetaomegarangle_s-r langleetarangle_r  langleomegarangle_s = langletildeetaomegarangle_r-s\nReversed langletildeetarangle_s  langletildeomegarangle_r = langleetatildeomegarangle_s-r langletildeetarangle_r  langletildeomegarangle_s = langleetatildeomegarangle_r-s\nConventional langleetarangle_s  langletilde omegarangle_r = langleetaomegarangle_s-r langletilde etarangle_r  langleomegarangle_s = langleetaomegarangle_r-s","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"julia> (v1 + v2) ⋅ (1.5v2 + v3)\n1.5v","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(G3.v1 + G3.v2) ⋅ (1.5G3.v2 + G3.v3)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"When using Grassmann in a session, the cayley table can be used to recall geometric algebra information, e.g. to compare  and  contractions:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"cayley(Submanifold(3),*) # Clifford geometric product *","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"beginarrayccccccccc\n\t*  v  v_1  v_2  v_3  v_12  v_13  v_23  v_123 \n\thline\n\tv  v  v_1  v_2  v_3  v_12  v_13  v_23  v_123 \n\tv_1  v_1  v  v_12  v_13  v_2  v_3  v_123  v_23 \n\tv_2  v_2  -v_12  v  v_23  -v_1  -v_123  v_3  -v_13 \n\tv_3  v_3  -v_13  -v_23  v  v_123  -v_1  -v_2  v_12 \n\tv_12  v_12  -v_2  v_1  v_123  -v  -v_23  v_13  -v_3 \n\tv_13  v_13  -v_3  -v_123  v_1  v_23  -v  -v_12  v_2 \n\tv_23  v_23  v_123  -v_3  v_2  -v_13  v_12  -v  -v_1 \n\tv_123  v_123  v_23  -v_13  v_12  -v_3  v_2  -v_1  -v\nendarray","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"cayley(Submanifold(3),>) # Grassmann contraction >","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"beginarrayccccccccc\n\t  v  v_1  v_2  v_3  v_12  v_13  v_23  v_123 \n\thline\n\tv  v  0  0  0  0  0  0  0 \n\tv_1  v_1  v  0  0  0  0  0  0 \n\tv_2  v_2  0  v  0  0  0  0  0 \n\tv_3  v_3  0  0  v  0  0  0  0 \n\tv_12  v_12  v_2  -v_1  0  v  0  0  0 \n\tv_13  v_13  v_3  0  -v_1  0  v  0  0 \n\tv_23  v_23  0  v_3  -v_2  0  0  v  0 \n\tv_123  v_123  v_23  -v_13  v_12  v_3  -v_2  v_1  v\nendarray","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"cayley(Submanifold(3),>>) # Conventional contraction >>","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"beginarrayccccccccc\n\t  v  v_1  v_2  v_3  v_12  v_13  v_23  v_123 \n\thline\n\tv  v  0  0  0  0  0  0  0 \n    v_1  v_1  v  0  0  0  0  0  0 \n\tv_2  v_2  0  v  0  0  0  0  0 \n\tv_3  v_3  0  0  v  0  0  0  0 \n\tv_12  -v_12  -v_2  v_1  0  -v  0  0  0 \n\tv_13  -v_13  -v_3  0  v_1  0  -v  0  0 \n\tv_23  -v_23  0  -v_3  v_2  0  0  -v  0 \n\tv_123  -v_123  -v_23  v_13  -v_12  -v_3  v_2  -v_1  -v\nendarray","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (Linear system of equations) Let p_0dotsp_n in Lambda^1V,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"p_1dotsp_n vee starsum_i=1^n fracp_1dots(i-1)wedge p_0 wedge p_(i+1)dots np_1dots nv_i = p_0","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Theorem proved by Michael Reed in Grassmann.jl research papers.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. Grassmann methods for low dimensional linear systems are more numerically stable than Julia Base.LinearAlegbra methods and fast.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"[1 2; 3 4]\\[5,6] # inexact\n@TensorOperator([1 2; 3 4])\\Chain(5,6) # exact","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"\tbeginbmatrix\n\t\t -39999999999999987 \n\t\t  4499999999999999\n\tendbmatrix\n\tqquad\n\tbeginbmatrix\n\t\t-4  45\n\tendbmatrix","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"This means that using only exterior products there is an explicit solution to linear systems by allocating both of p_1dots iwedge p_i+1_i=0^n-1 and p_n-iwedge p_(n-i+1)dots n_i=0^n-1 and then taking exterior product permutations with p_0 also.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"p_0 in p_1dotsp_n Longleftrightarrow forall i  p_1dots n = p_1dots(i-1)wedge p_0wedge p_(i+1)dots n","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Since exterior products are oriented, it is sufficient to check the orientation of the hyperplanes with respect to the reference point for determining whether p_0 is a point contained in the simplex p_1dots n. Thus, it is sufficient to check the orientation of all the same exterior products as when solving linear systems, while calculating a linear inv (inverse) involves only a partial application of this principle and requires also allocating a transposed dyadic result:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"p_1dotsp_n^-1 = left(sum_i=1^nstarfracp_1dots(i-1)wedge p_(i+1)dots n((-1)^i)^n-1p_1dots nv_i right)^T","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Furthermore, the Pbackslash p_0 method implementation is a partial application of this with the action of an operator. Consider operator composed with inv","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"B = v12+2v13-3v23 # using Grassmann; basis\"3\"\noperator(B) # convert B to endomorphisim representation\ninv(operator(B))\noperator(inv(B))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"\tbeginbmatrix\n\t\t4  12   -6 \n\t\t12  -6   -4 \n\t\t-6  -4  -12\n\tendbmatrix\n\tqquad\n\tbeginbmatrix\n\t\t00204082   00612245  -00306122 \n\t\t00612245  -00306122  -00204082 \n\t\t-00306122  -00204082  -00612245\n\tendbmatrix","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Let nabla = sum_kpartial_kv_k be a vector field and epsilon = sum_kepsilon_k(x)w_k in Omega^1V be unit sums of the mixed-symmetry basis. Elements of Omega^pV are known as differential p-forms and both nabla and epsilon are tensor fields dependent on xin W. Another notation for a differential form is dx_k = epsilon_k(x)w_k, such that epsilon_k = dx_kw_k and partial_komega(x) = omega(x).","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"tangent(ℝ^3)(∇)\n(ℝ^3)(∇)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition. Define differential dOmega^p VrightarrowOmega^p+1V and co-differential deltaOmega^pVrightarrowOmega^p-1V such that","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"star domega = star(nablawedgeomega) = nablatimesomega qquad omegacdotnabla = omegaveestarnabla = partialomega =-deltaomega","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Vorticity curl of vector-field: star d(dx_1+dx_2+dx_3) = (_2 -_3)dx_1 + (_3 -_1)dx_2 + (_1 -_2)dx_3.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"@basis tangent(ℝ^3,2,3); ⋆d(v1+v2+v3)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Boundary of 3-simplex, faces of simplex (oriented): partial(v_1234) = -partial_4v_123+partial_3v_124-partial_2v_134+partial_1v_234.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"∂(Λ(tangent(ℝ^4,2,4)).v1234)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"These two maps have the special properties dcirc d=0 and partialcircpartial = 0 for any form omega and vector field nabla. In topology there is boundary operator partial defined by partialepsilon = epsiloncdotnabla = sum_kpartial_kepsilon_k and is commonly discussed in terms the limit epsilon(x)cdotnablaomega(x) = lim_hrightarrow0 fracomega(x+hepsilon)-omega(x)h, which is the directional derivative.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (Integration by parts & Stokes). Let nabla inOmega_1 V be a Leibnizian vector field operator, then d-partial are Hilbert adjoint Hodge-DeRahm operators with","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"int_M domegawedgestareta +int_M omegawedgestarpartialeta = 0 qquad langle domegaastetarangle =langleomegaast-partialetarangle","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Recall, partialomega = omegacdotnabla = star^-1(staromegawedgestar^2nabla) = (-1)^n(-1)^nkstar dstaromega. Then  substitute this into the integral int_M omegawedge(-1)^mk+m+1starstar dstareta = (-1)^km+m+1(-1)^(m-k+1)(k-1)int_Momegawedge dstareta, and apply the identity (-1)^km+m+1(-1)^(m-k+1)(k-1)=(-1)^k and (-1)^kint_Momegawedge dstareta = int_M d(omegawedgestareta) - (-1)^k-1omegawedge dstareta = int_M domegawedgestareta. Stokes identity can be proved by relying on a variant of the common factor theorem by Browne.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (Clifford-Dirac-Laplacian) Dirac operator is (nabla^2)^frac12omega = pmnablaomega = pmnablawedgeomega pm nablacdotomega  = pm domegapmpartialomega.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"nabla^2omega = nablawedge(omegacdotnabla) + (nablawedgeomega)cdotnabla) = mp(mpomegaominusnabla)ominusnabla)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Elements omegainmathcal H^p M = nablaomega = 0midomegain Omega^pM are harmonic forms if nablaomega = 0 and hence both closed domega=0 and coclosed deltaomega=0. Hodge decomposition: Omega^pM=mathcal H^pMoplustextim(dOmega^p-1M)oplustextim(partialOmega^p+1M).","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (First grade sandwich product) Reflection by hyperplane starnabla has isometry omegaoslash = -nablabackslashomeganabla.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Proof. Theorem proved by Michael Reed in Grassmann.jl research papers.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Theorem (Cartan-Dieudonne) For every isometry of Vrightarrow V, there is a way to express it as composite of at most k reflections across non-singular hyperplanes. Hence there exist vectors nabla_j such that","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(((omegaoslashnabla_1)oslashnabla_2)oslashcdots)oslashnabla_k = omegaoslash(nabla_1nabla_2cdotsnabla_k)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"for any isometry element of the orthogonal group O(pq).","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Note that elements under the transformations of this group preserve inner product relations. The even grade operators make up the rotational group, where each bivector isometry is a composition of two reflections.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Exponential map and Lie group parameter special cases: consider the differential equation partial_iepsilon_j = epsilon_joslashomega with the solution epsilon_j(x) = epsilon_j(0)oslash e^x_iomega where theta =2 x_i is the parameter of the Lie group. Then for a normalized omega,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"e^thetaomega = sum_k frac(thetaomega)^kk = begincases coshtheta+omegasinhtheta  textif  omega^2 = 1  costheta + omegasintheta  textif  omega^2=-1  1+thetaomega  textif  omega^2=0 endcases","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Note that nablaoslash e^thetaomega2 = nabla ominus e^thetaomega is a double covering when using the complex numbers in the Euclidean plane.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Remark. The sandwich must be written with reversion on the left side, otherwise the rotation is clockwise and opposite of the phase parameter convention used by Euler's formula. For example, observe the resultant direction of rotation","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"e^fracpi4v_12v_1widetildee^fracpi4v_12 = -v_2","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"which means it is rotating in the wrong direction opposite of Euler, while","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"widetildee^fracpi4v_12v_1e^fracpi4v_12 = v_2","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"is compatible with Euler's convention. So, sandwich must be applied with its reversion on the left side–if the standard Euler rotation direction is desired. However, many authors follow the opposite convention of clockwise instead.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"AbstractTensors, Grassmann settled on custom trigonometric identities,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"exp(omega) = sum_n=0^infty fracomega^nn","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"log(omega) = sum_n=0^infty frac22n+1left(fracomega-1omega+1right)^2n+1","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"cosh(omega) = sum_n=0^infty fracomega^2n(2n)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"sinh(omega) = sum_n=0^infty fracomega^2n+1(2n+1)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"cos(omega) = cosh(Iomega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"sin(omega) = sinh(Iomega)I","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"tan(omega) = fracsin(omega)cos(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"cot(omega) = fraccos(omega)sin(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"sec(omega) = frac1cos(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"csc(omega) = frac1sin(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textasec(omega) = textacos(omega^-1)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textacsc(omega) = textasin(omega^-1)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textsech(omega) = frac1cosh(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textcsch(omega) = frac1sinh(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textasech(omega) = textacosh(omega^-1)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textacsch(omega) = textasinh(omega^-1)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"tanh(omega) = fracsinh(omega)cosh(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"coth(omega) = fraccosh(omega)sinh(omega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textasinh(omega) = logleft(omega + sqrtomega^2+1right)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textacosh(omega) = logleft(omega + sqrtomega^2-1right)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textatanh(omega) = fraclog(1+omega)-log(1-omega)2","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textacoth(omega) = fraclog(omega+1)-log(omega-1)2","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textasin(omega) = -Ilogleft(Iomega + sqrt1-omega^2right)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textacos(omega) = -Ilogleft(omega + Isqrt1-omega^2right)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textatan(omega) = -Itextatanh(Iomega)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textacot(omega) = textstyle-Ifraclog(omega-I)-log(omega+I)2","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Due to GeometryTypes.jl Point interoperability, plotting and visualizing with Makie.jl is easily possible. For example, the vectorfield method creates an anonymous Point function that applies a versor outermorphism:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann, Makie\nbasis\"2\" # Euclidean\nstreamplot(vectorfield(exp(π*v12/2)),-1.5..1.5,-1.5..1.5)\nstreamplot(vectorfield(exp((π/2)*v12/2)),-1.5..1.5,-1.5..1.5)\nstreamplot(vectorfield(exp((π/4)*v12/2)),-1.5..1.5,-1.5..1.5)\nstreamplot(vectorfield(v1*exp((π/4)*v12/2)),-1.5..1.5,-1.5..1.5)\n@basis S\"+-\" # Hyperbolic\nstreamplot(vectorfield(exp((π/8)*v12/2)),-1.5..1.5,-1.5..1.5)\nstreamplot(vectorfield(v1*exp((π/4)*v12/2)),-1.5..1.5,-1.5..1.5)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(Image: paper/img/plane-1.png) (Image: paper/img/plane-2.png) (Image: paper/img/plane-3.png) (Image: paper/img/plane-4.png) (Image: paper/img/plane-3.png) (Image: paper/img/plane-4.png)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann, Makie\n@basis S\"∞+++\"\nf(t) = (↓(exp(π*t*((3/7)*v12+v∞3))>>>↑(v1+v2+v3)))\nlines(V(2,3,4).(points(f)))\n@basis S\"∞∅+++\"\nf(t) = (↓(exp(π*t*((3/7)*v12+v∞3))>>>↑(v1+v2+v3)))\nlines(V(3,4,5).(points(f)))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(Image: paper/img/torus.png) (Image: paper/img/helix.png)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann, Makie; @basis S\"∞+++\"\nstreamplot(vectorfield(exp((π/4)*(v12+v∞3)),V(2,3,4)),-1.5..1.5,-1.5..1.5,-1.5..1.5,gridsize=(10,10))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(Image: paper/img/orb.png)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann, Makie; @basis S\"∞+++\"\nstreamplot(vectorfield(exp((π/4)*(v12+v∞3)),V(2,3,4),V(1,2,3)),-1.5..1.5,-1.5..1.5,-1.5..1.5,gridsize=(10,10))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(Image: paper/img/wave.png)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann, Makie; @basis S\"∞+++\"\nf(t) = ↓(exp(t*v∞*(sin(3t)*3v1+cos(2t)*7v2-sin(5t)*4v3)/2)>>>↑(v1+v2-v3))\nlines(V(2,3,4).(points(f)))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(Image: paper/img/orb.png)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann, Makie; @basis S\"∞+++\"\nf(t) = ↓(exp(t*(v12+0.07v∞*(sin(3t)*3v1+cos(2t)*7v2-sin(5t)*4v3)/2))>>>↑(v1+v2-v3))\nlines(V(2,3,4).(points(f)))","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(Image: paper/img/orb.png)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"As a result of Grassmann's exterior & interior products, the Hodge-DeRahm chain complex from cohomology theory is","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"0 undersetpartialoversetdrightleftarrows Omega^0(M) undersetpartialoversetdrightleftarrows Omega^1(M) undersetpartialoversetdrightleftarrows cdots undersetpartialoversetdrightleftarrows Omega^n(M) undersetpartialoversetdrightleftarrows 0","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"having dimensional equivalence brought by the Grassmann-Hodge complement,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"mathcal H^n-pM cong fractextker(dOmega^n-pM)textim(dOmega^n-p+1M) qquad dimmathcal H^pM = dimfractextker(partialOmega^pM)textim(partialOmega^p+1M)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The rank of the grade p boundary incidence operator is","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"textranklanglepartiallangle Mrangle_p+1rangle_p = mindimlanglepartiallangle Mrangle_p+1rangle_pdimlangle Mrangle_p+1","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Invariant topological information can be computed using the rank of homology,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"b_p(M) = dimlangle Mrangle_p+1 - textranklanglepartiallangle Mrangle_p+1rangle_p - textranklanglepartiallangle Mrangle_p+2rangle_p+1","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"are the Betti numbers with Euler characteristic chi(M) = sum_p (-1)^pb_p.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Let's obtain the full skeleton of a simplical complex Delta(omega)=mathcal P(omega)backslashLambda^0(V) from the power set mathcal P(omega) of all vertices with each subcomplex Delta(partial(omega)) contained in the edge graph:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Delta(omega) =  sum_g=1^nsum_k=1^nchoose gleft(textabslangleomegarangle_gk + Deltaleft(textabspartiallangleomegarangle_gkright)right)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Compute the value chi(Delta(omega))=1 and chi(Delta(partial(omega))) =   for any simplex omega. As an exercise, also compute the corresponding betti numbers..","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"[(χ(Δ(ω)),χ(Δ(∂(ω)))) for ω ∈ (Λ(ℝ5).v12,Λ(ℝ5).v123,Λ(ℝ5).v1234,Λ(ℝ5).v12345)]","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"These methods can be applied to any Multivector simplicial complex.","category":"page"},{"location":"algebra/#Null-basis-of-the-projective-split","page":"Algebra","title":"Null-basis of the projective split","text":"","category":"section"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Let v_pm^2 = pm1 be a basis with v_infty = v_++v_- and v_emptyset = (v_--v_+)2. An embedding space mathbb R^p+1q+1 carrying the action from the group O(p+1q+1) then has v_infty^2 =0, v_emptyset^2 =0, v_infty cdot v_emptyset = -1,  and v_inftyemptyset^2 = 1 with Lobachevskian plane v_inftyemptyset having these product properties,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"using Grassmann; @basis S\"∞∅++\"\nv∞^2, v∅^2, v1^2, v2^2\nv∞ ⋅ v∅, v∞∅^2\nv∞∅ * v∞, v∞∅ * v∅\nv∞ * v∅, v∅ * v∞","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"For the null-basis, complement operations are different:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"star v_infty = star(v_++v_-) = (v_- + v_+)v_1n = v_infty1n","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":" star 2v_emptyset = star(v_--v_+) = (v_+ - v_-)v_1n = -2v_emptyset1n","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The Hodge complement satisfies langleomegaastomegarangle I=omegawedgestaromega. This property is naturally a result of using the geometric product in the definition. An additional metric independent version of the complement operation is available with the ! operator,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"v_infty = (v_++v_-) = (v_- - v_+)v_1n = 2v_emptyset1n","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"2v_emptyset = (v_--v_+) = (v_+ + v_-)v_1n = -v_infty1n","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"For that variation of complement, omega^2 I = omegawedgeomega holds.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"⋆v∞, !v∞, ⋆v∅, !v∅\n!v∞ * v12 == -2v∅, !v∅ * v12 == v∞/2\n⋆v∞ * v12 == -v∞, ⋆v∅ * v12 == v∅\nv∞ * !v∞, v∅ * !v∅","category":"page"},{"location":"algebra/#Extended-tangent-algebra-basis","page":"Algebra","title":"Extended tangent algebra basis","text":"","category":"section"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Definition (Symmetric Leibniz differentials): Let partial_k = fracpartialpartial x_kin L_gV be Leibnizian symmetric tensors, then there is an equivalence relation asymp which holds for each sigmain S_p","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"(partial_p circ dotscirc  partial_1)omega asymp(bigotimes_k partial_sigma(k))omega  iff ominus_kpartial_k = bigodot_kpartial_k","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"along with each derivation partial_k(omegaeta) = partial_k(omega)eta + omegapartial_k(eta).","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"The product rule is encoded into Grassmann algebra when a tangent bundle is used, demonstrated here symbolically with Reduce by using the dual number definition:","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"julia> using Grassmann, Reduce\nReduce (Free CSL version, revision 4590), 11-May-18 ...\n\njulia> @mixedbasis tangent(ℝ^1)\n(⟨+-₁¹⟩*, v, v₁, w¹, ϵ₁, ∂¹, v₁w¹, v₁ϵ₁, v₁∂¹, w¹ϵ₁, w¹∂¹, ϵ₁∂¹, v₁w¹ϵ₁, v₁w¹∂¹, v₁ϵ₁∂¹, w¹ϵ₁∂¹, v₁w¹ϵ₁∂¹)\n\njulia> a,b = :x*v1 + :dx*ϵ1, :y*v1 + :dy*ϵ1\n(xv₁ + dxϵ₁, yv₁ + dyϵ₁)\n\njulia> a * b\nx * y + (dy * x + dx * y)v₁ϵ₁","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Higher order and multivariable Taylor numbers are also supported.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"@basis tangent(ℝ,2,2) # 1D Grade, 2nd Order, 2 Variables\n∂1 * ∂1v1\n∂1 * ∂2\nv1*∂12\n∂12*∂2 # 3rd order is zero\n@mixedbasis tangent(ℝ^2,2,2); # 2D Grade, 2nd Order, 2 Variables\nV(∇) # vector field\nV(∇) ⋅ V(∇) # Laplacian\nans*∂1 # 3rd order is zero","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Multiplication with an epsilon_i element is used help signify tensor fields so that differential operators are automatically applied in the Submanifold algebra as ∂ⱼ⊖(ω⊗ϵᵢ) = ∂ⱼ(ωϵᵢ) ≠ (∂ⱼ⊗ω)⊖ϵᵢ.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"julia> using Reduce, Grassmann; @mixedbasis tangent(ℝ^2,3,2);\n\njulia> (∂1+∂12) * (:(x1^2*x2^2)*ϵ1 + :(sin(x1))*ϵ2)\n0.0 + (2 * x1 * x2 ^ 2)∂₁ϵ¹ + (cos(x1))∂₁ϵ² + (4 * x1 * x2)∂₁₂ϵ¹","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Although fully generalized, the implementation in this release is still experimental.","category":"page"},{"location":"algebra/#Symbolic-coefficients-by-declaring-algebra","page":"Algebra","title":"Symbolic coefficients by declaring algebra","text":"","category":"section"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Due to the abstract generality of the code generation of the Grassmann product algebra, it is easily possible to extend the entire set of operations to other kinds of scalar coefficient types.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"julia> using GaloisFields, Grassmann\n\njulia> const F = GaloisField(7)\n𝔽₇\n\njulia> basis\"2\"\n(⟨++⟩, v, v₁, v₂, v₁₂)\n\njulia> F(3)*v1\n3v₁\n\njulia> inv(ans)\n5v₁","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"By default, the coefficients are required to be <:Number. However, if this does not suit your needs, alternative scalar product algebras can be specified with","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"Grassmann.generate_algebra(:AbstractAlgebra,:SetElem)","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"where :SetElem is the desired scalar field and :AbstractAlgebra is the scope which contains the scalar field.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"With the usage of Requires, symbolic scalar computation with Reduce.jl and other packages is automatically enabled,","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"julia> using Reduce, Grassmann\nReduce (Free CSL version, revision 4590), 11-May-18 ...\n\njulia> basis\"2\"\n(⟨++⟩, v, v₁, v₂, v₁₂)\n\njulia> (:a*v1 + :b*v2) ⋅ (:c*v1 + :d*v2)\n(a * c + b * d)v\n\njulia> (:a*v1 + :b*v2) ∧ (:c*v1 + :d*v2)\n0.0 + (a * d - b * c)v₁₂\n\njulia> (:a*v1 + :b*v2) * (:c*v1 + :d*v2)\na * c + b * d + (a * d - b * c)v₁₂","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"If these compatibility steps are followed, then Grassmann will automatically declare the product algebra to use the Reduce.Algebra symbolic field operation scope.","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"julia> using Reduce,Grassmann; basis\"4\"\nReduce (Free CSL version, revision 4590), 11-May-18 ...\n(⟨++++⟩, v, v₁, v₂, v₃, v₄, v₁₂, v₁₃, v₁₄, v₂₃, v₂₄, v₃₄, v₁₂₃, v₁₂₄, v₁₃₄, v₂₃₄, v₁₂₃₄)\n\njulia> P,Q = :px*v1 + :py*v2 + :pz* v3 + v4, :qx*v1 + :qy*v2 + :qz*v3 + v4\n(pxv₁ + pyv₂ + pzv₃ + 1.0v₄, qxv₁ + qyv₂ + qzv₃ + 1.0v₄)\n\njulia> P∧Q\n0.0 + (px * qy - py * qx)v₁₂ + (px * qz - pz * qx)v₁₃ + (px - qx)v₁₄ + (py * qz - pz * qy)v₂₃ + (py - qy)v₂₄ + (pz - qz)v₃₄\n\njulia> R = :rx*v1 + :ry*v2 + :rz*v3 + v4\nrxv₁ + ryv₂ + rzv₃ + 1.0v₄\n\njulia> P∧Q∧R\n0.0 + ((px * qy - py * qx) * rz - ((px * qz - pz * qx) * ry - (py * qz - pz * qy) * rx))v₁₂₃ + (((px * qy - py * qx) + (py - qy) * rx) - (px - qx) * ry)v₁₂₄ + (((px * qz - pz * qx) + (pz - qz) * rx) - (px - qx) * rz)v₁₃₄ + (((py * qz - pz * qy) + (pz - qz) * ry) - (py - qy) * rz)v₂₃₄","category":"page"},{"location":"algebra/","page":"Algebra","title":"Algebra","text":"It should be straight-forward to easily substitute any other extended algebraic operations and fields; issues with questions or pull-requests to that end are welcome.","category":"page"},{"location":"library/#Grassmann.jl-Library","page":"Library","title":"Grassmann.jl Library","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Pages = [\"design.md\",\"algebra.md\",\"videos.md\",\"library.md\",\"references.md\"]","category":"page"},{"location":"library/#AbstractTensors.Bivector","page":"Library","title":"AbstractTensors.Bivector","text":"Bivector{V,T} <: TensorGraded{V,2,T}\n\nGraded bivector elements of a Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.GradedVector","page":"Library","title":"AbstractTensors.GradedVector","text":"GradedVector{V,T} <: TensorGraded{V,1,T}\n\nGraded vector elements of a Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.Manifold","page":"Library","title":"AbstractTensors.Manifold","text":"Manifold{V,T} <: TensorAlgebra{V,T}\n\nBasis parameter locally homeomorphic to V::Submanifold{M} T-module product topology.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.Scalar","page":"Library","title":"AbstractTensors.Scalar","text":"Scalar{V,T} <: TensorGraded{V,0,T}\n\nGraded scalar elements of a Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.TensorAlgebra","page":"Library","title":"AbstractTensors.TensorAlgebra","text":"TensorAlgebra{V,T} <: Number\n\nUniversal root tensor type with Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.TensorGraded","page":"Library","title":"AbstractTensors.TensorGraded","text":"TensorGraded{V,G,T} <: Manifold{V,T} <: TensorAlgebra\n\nGrade G elements of a Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.TensorMixed","page":"Library","title":"AbstractTensors.TensorMixed","text":"TensorMixed{V,T} <: TensorAlgebra{V,T}\n\nElements of Manifold instance V having non-homogenous grade with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.TensorTerm","page":"Library","title":"AbstractTensors.TensorTerm","text":"TensorTerm{V,G,T} <: TensorGraded{V,G,T}\n\nSingle coefficient for grade G of a Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.Trivector","page":"Library","title":"AbstractTensors.Trivector","text":"Trivector{V,T} <: TensorGraded{V,3,T}\n\nGraded trivector elements of a Manifold instance V with scalar field T.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.antisandwich-Tuple{Any, Any}","page":"Library","title":"AbstractTensors.antisandwich","text":"antisandwich(x::TensorAlgebra,R::TensorAlgebra)\n\nDefined as complementleft(complementright(R)>>>complementright(x)).\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.bivector","page":"Library","title":"AbstractTensors.bivector","text":"bivector(::TensorAlgebra)\n\nReturn the bivector (rank 2) part of any TensorAlgebra element.\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.coabs","page":"Library","title":"AbstractTensors.coabs","text":"coabs(t::TensorAlgebra)\n\nComplemented abs defined as complementleft(abs(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.coabs2","page":"Library","title":"AbstractTensors.coabs2","text":"coabs2(t::TensorAlgebra)\n\nComplemented abs2 defined as complementleft(abs2(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cocbrt","page":"Library","title":"AbstractTensors.cocbrt","text":"cocbrt(t::TensorAlgebra)\n\nComplemented cbrt defined as complementleft(cbrt(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cocos","page":"Library","title":"AbstractTensors.cocos","text":"cocos(t::TensorAlgebra)\n\nComplemented cos defined as complementleft(cos(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cocosh","page":"Library","title":"AbstractTensors.cocosh","text":"cocosh(t::TensorAlgebra)\n\nComplemented cosh defined as complementleft(cosh(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.coexp","page":"Library","title":"AbstractTensors.coexp","text":"coexp(t::TensorAlgebra)\n\nComplemented exp defined as complementleft(exp(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.coinv","page":"Library","title":"AbstractTensors.coinv","text":"coinv(t::TensorAlgebra)\n\nComplemented inv defined as complementleft(inv(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.colog","page":"Library","title":"AbstractTensors.colog","text":"colog(t::TensorAlgebra)\n\nComplemented log defined as complementleft(log(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cosandwich-Tuple{Any, Any}","page":"Library","title":"AbstractTensors.cosandwich","text":"cosandwich(x::TensorAlgebra,R::TensorAlgebra)\n\nDefined as complementleft(sandwich(complementright(x),complementright(R))).\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.cosin","page":"Library","title":"AbstractTensors.cosin","text":"cosin(t::TensorAlgebra)\n\nComplemented sin defined as complementleft(sin(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cosinh","page":"Library","title":"AbstractTensors.cosinh","text":"cosinh(t::TensorAlgebra)\n\nComplemented sinh defined as complementleft(sinh(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cosqrt","page":"Library","title":"AbstractTensors.cosqrt","text":"cosqrt(t::TensorAlgebra)\n\nComplemented sqrt defined as complementleft(sqrt(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cotan","page":"Library","title":"AbstractTensors.cotan","text":"cotan(t::TensorAlgebra)\n\nComplemented tan defined as complementleft(tan(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.cotanh","page":"Library","title":"AbstractTensors.cotanh","text":"cotanh(t::TensorAlgebra)\n\nComplemented tanh defined as complementleft(tanh(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.counit-Tuple{T} where T<:Number","page":"Library","title":"AbstractTensors.counit","text":"counit(t::TensorAlgebra)\n\nPseudo-normalization defined as unitize(t) = t/value(coabs(t)).\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.gdims-Union{Tuple{TensorGraded{V, G}}, Tuple{G}, Tuple{V}} where {V, G}","page":"Library","title":"AbstractTensors.gdims","text":"gdims(t::TensorGraded{V,G})\n\nDimensionality of the grade G of V for that TensorAlgebra.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.geomabs-Tuple{T} where T<:TensorAlgebra","page":"Library","title":"AbstractTensors.geomabs","text":"geomabs(t::TensorAlgebra)\n\nGeometric norm defined as geomabs(t) = abs(t) + coabs(t).\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.isgraded-Tuple{T} where T<:TensorGraded","page":"Library","title":"AbstractTensors.isgraded","text":"isgraded(t) -> Bool\n\nTest whether t is some subtype of TensorGraded.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.ismanifold-Tuple{T} where T<:Manifold","page":"Library","title":"AbstractTensors.ismanifold","text":"ismanifold(t) -> Bool\n\nTest whether t is some subtype of Manifold.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.ismixed-Tuple{T} where T<:TensorMixed","page":"Library","title":"AbstractTensors.ismixed","text":"ismixed(t) -> Bool\n\nTest whether t is some subtype of TensorMixed.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.istensor-Tuple{T} where T<:TensorAlgebra","page":"Library","title":"AbstractTensors.istensor","text":"istensor(t) -> Bool\n\nTest whether t is some subtype of TensorAlgebra.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.isterm-Tuple{T} where T<:TensorTerm","page":"Library","title":"AbstractTensors.isterm","text":"isterm(t) -> Bool\n\nTest whether t is some subtype of TensorTerm.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.mdims-Tuple{T} where T<:TensorAlgebra","page":"Library","title":"AbstractTensors.mdims","text":"mdims(t::TensorAlgebra{V})\n\nDimensionality of the pseudoscalar V of that TensorAlgebra.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.pseudoabs","page":"Library","title":"AbstractTensors.pseudoabs","text":"pseudoabs(t::TensorAlgebra)\n\nComplemented abs defined as complementleft(abs(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudoabs2","page":"Library","title":"AbstractTensors.pseudoabs2","text":"pseudoabs2(t::TensorAlgebra)\n\nComplemented abs2 defined as complementleft(abs2(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudocbrt","page":"Library","title":"AbstractTensors.pseudocbrt","text":"pseudocbrt(t::TensorAlgebra)\n\nComplemented cbrt defined as complementleft(cbrt(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudocos","page":"Library","title":"AbstractTensors.pseudocos","text":"pseudocos(t::TensorAlgebra)\n\nComplemented cos defined as complementleft(cos(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudocosh","page":"Library","title":"AbstractTensors.pseudocosh","text":"pseudocosh(t::TensorAlgebra)\n\nComplemented cosh defined as complementleft(cosh(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudoexp","page":"Library","title":"AbstractTensors.pseudoexp","text":"pseudoexp(t::TensorAlgebra)\n\nComplemented exp defined as complementleft(exp(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudoinv","page":"Library","title":"AbstractTensors.pseudoinv","text":"pseudoinv(t::TensorAlgebra)\n\nComplemented inv defined as complementleft(inv(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudolog","page":"Library","title":"AbstractTensors.pseudolog","text":"pseudolog(t::TensorAlgebra)\n\nComplemented log defined as complementleft(log(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudoscalar-Tuple{T} where T<:Manifold","page":"Library","title":"AbstractTensors.pseudoscalar","text":"pseudoscalar(::TensorAlgebra), volume(::TensorAlgebra)\n\nReturn the pseudoscalar (full rank) part of any TensorAlgebra element.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.pseudosin","page":"Library","title":"AbstractTensors.pseudosin","text":"pseudosin(t::TensorAlgebra)\n\nComplemented sin defined as complementleft(sin(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudosinh","page":"Library","title":"AbstractTensors.pseudosinh","text":"pseudosinh(t::TensorAlgebra)\n\nComplemented sinh defined as complementleft(sinh(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudosqrt","page":"Library","title":"AbstractTensors.pseudosqrt","text":"pseudosqrt(t::TensorAlgebra)\n\nComplemented sqrt defined as complementleft(sqrt(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudotan","page":"Library","title":"AbstractTensors.pseudotan","text":"pseudotan(t::TensorAlgebra)\n\nComplemented tan defined as complementleft(tan(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.pseudotanh","page":"Library","title":"AbstractTensors.pseudotanh","text":"pseudotanh(t::TensorAlgebra)\n\nComplemented tanh defined as complementleft(tanh(complementright(t))).\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.scalar","page":"Library","title":"AbstractTensors.scalar","text":"scalar(::TensorAlgebra)\n\nReturn the scalar (rank 0) part of any TensorAlgebra element.\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.tdims-Tuple{T} where T<:TensorAlgebra","page":"Library","title":"AbstractTensors.tdims","text":"tdims(t::TensorAlgebra{V})\n\nDimensionality of the superalgebra of V for that TensorAlgebra.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.trivector","page":"Library","title":"AbstractTensors.trivector","text":"trivector(::TensorAlgebra)\n\nReturn the trivector (rank 3) part of any TensorAlgebra element.\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.unit-Tuple{T} where T<:Number","page":"Library","title":"AbstractTensors.unit","text":"unit(t::Number)\n\nNormalization defined as unit(t) = t/abs(t).\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.unitnorm-Tuple{T} where T<:Number","page":"Library","title":"AbstractTensors.unitnorm","text":"unitnorm(t::TensorAlgebra)\n\nGeometric normalization defined as unitnorm(t) = t/norm(geomabs(t)).\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.value-Tuple{T} where T<:Number","page":"Library","title":"AbstractTensors.value","text":"value(::TensorAlgebra)\n\nReturns the internal Values representation of a TensorAlgebra element.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.valuetype-Union{Tuple{T}, Tuple{V}, Tuple{K}} where {K, V, T<:TensorAlgebra{V, K}}","page":"Library","title":"AbstractTensors.valuetype","text":"valuetype(t::TensorAlgebra{V,T}) where {V,T} = T\n\nReturns type of a TensorAlgebra element value's internal representation.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.vector","page":"Library","title":"AbstractTensors.vector","text":"vector(::TensorAlgebra)\n\nReturn the vector (rank 1) part of any TensorAlgebra element.\n\n\n\n\n\n","category":"function"},{"location":"library/#LinearAlgebra.rank-Union{Tuple{T}, Tuple{G}, Tuple{V}} where {V, G, T<:(TensorGraded{V, G})}","page":"Library","title":"LinearAlgebra.rank","text":"rank(::Manifold{n})\n\nDimensionality n of the Manifold subspace representation.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.@co-Tuple{Any}","page":"Library","title":"AbstractTensors.@co","text":"@co fun(args...)\n\nUse the macro @co to make a pseudoscalar complement variant of any functions:\n\njulia> @co myfun(x)\ncomyfun (generic function with 1 method)\n\nNow comyfun(x) = complementleft(myfun(complementright(x))) is defined.\n\njulia> @co myproduct(a,b)\ncomyproduct (generic function with 1 method)\n\nNow comyproduct(a,b) = complementleft(myproduct(!a,!b)) is defined.\n\n\n\n\n\n","category":"macro"},{"location":"library/#AbstractTensors.@pseudo-Tuple{Any}","page":"Library","title":"AbstractTensors.@pseudo","text":"@pseudo fun(args...)\n\nUse the macro @pseudo to make a pseudoscalar complement variant of any functions:\n\njulia> @pseudo myfun(x)\npseudomyfun (generic function with 1 method)\n\nNow pseudomyfun(x) = complementleft(myfun(complementright(x))) is defined.\n\njulia> @pseudo myproduct(a,b)\npseudomyproduct (generic function with 1 method)\n\nNow pseudomyproduct(a,b) = complementleft(myproduct(!a,!b)) is defined.\n\n\n\n\n\n","category":"macro"},{"location":"library/#DirectSum.Basis","page":"Library","title":"DirectSum.Basis","text":"DirectSum.Basis{V} <: SubAlgebra{V} <: TensorAlgebra{V}\n\nGrassmann basis container with cache of Submanifold elements and their Symbol names.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.ExtendedBasis","page":"Library","title":"DirectSum.ExtendedBasis","text":"DirectSum.ExtendedBasis{V} <: SubAlgebra{V} <: TensorAlgebra{V}\n\nGrassmann basis container without a dedicated Submanifold cache (only lazy caching).\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.Infinity","page":"Library","title":"DirectSum.Infinity","text":"Infinity{V} <: TensorGraded{V,0} <: TensorAlgebra{V}\n\nInfinite quantity Infinity of the Grassmann algebra over V.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.One","page":"Library","title":"DirectSum.One","text":"One{V} <: TensorGraded{V,0} <: TensorAlgebra{V}\n\nUnit quantity One of the Grassmann algebra over V.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.Single","page":"Library","title":"DirectSum.Single","text":"Single{V,G,B,T} <: TensorTerm{V,G,T} <: TensorGraded{V,G,T}\n\nSingle type with pseudoscalar V::Manifold, grade/rank G::Int, B::Submanifold{V,G}, field T::Type.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.SparseBasis","page":"Library","title":"DirectSum.SparseBasis","text":"DirectSum.SparseBasis{V} <: SubAlgebra{V} <: TensorAlgebra{V}\n\nGrassmann basis with sparse cache of Submanifold{G,V} elements and their Symbol names.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.Submanifold","page":"Library","title":"DirectSum.Submanifold","text":"Submanifold{V,G,B} <: TensorGraded{V,G} <: Manifold{G}\n\nBasis type with pseudoscalar V::Manifold, grade/rank G::Int, bits B::UInt64.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.TensorBundle","page":"Library","title":"DirectSum.TensorBundle","text":"TensorBundle{n,ℙ,g,ν,μ} <: Manifold{n}\n\nA manifold representing the space of tensors with a given metric and basis for projection.\n\nLet n be the rank of a Manifold{n}. The type TensorBundle{n,ℙ,g,ν,μ} uses byte-encoded data available at pre-compilation, where ℙ specifies the basis for up and down projection, g is a bilinear form that specifies the metric of the space, and μ is an integer specifying the order of the tangent bundle (i.e. multiplicity limit of Leibniz-Taylor monomials). Lastly, ν is the number of tangent variables.\n\n\n\n\n\n","category":"type"},{"location":"library/#DirectSum.Zero","page":"Library","title":"DirectSum.Zero","text":"Zero{V} <: TensorGraded{V,0} <: TensorAlgebra{V}\n\nNull quantity Zero of the Grassmann algebra over V.\n\n\n\n\n\n","category":"type"},{"location":"library/#AbstractTensors.clifford","page":"Library","title":"AbstractTensors.clifford","text":"clifford(ω::TensorAlgebra)\n\nClifford conjugate of an element: clifford(ω) = involute(reverse(ω))\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.involute","page":"Library","title":"AbstractTensors.involute","text":"involute(ω::TensorAlgebra)\n\nInvolute of an element: ~ω = (-1)^grade(ω)*ω\n\n\n\n\n\n","category":"function"},{"location":"library/#Base.:~-Tuple{TensorAlgebra}","page":"Library","title":"Base.:~","text":"reverse(ω::TensorAlgebra)\n\nReverse of an element: ~ω = (-1)^(grade(ω)(grade(ω)-1)/2)ω\n\n\n\n\n\n","category":"method"},{"location":"library/#Base.conj","page":"Library","title":"Base.conj","text":"~(ω::TensorAlgebra)\n\nReverse of an element: ~ω = (-1)^(grade(ω)(grade(ω)-1)/2)ω\n\n\n\n\n\n","category":"function"},{"location":"library/#Base.imag-Union{Tuple{T}, Tuple{G}, Tuple{V}} where {V, G, T<:(TensorGraded{V, G})}","page":"Library","title":"Base.imag","text":"imag(ω::TensorAlgebra)\n\nThe imag part (ω-(~ω))/2 is defined by abs2(imag(ω)) == -(imag(ω)^2).\n\n\n\n\n\n","category":"method"},{"location":"library/#Base.real-Union{Tuple{T}, Tuple{G}, Tuple{V}} where {V, G, T<:(TensorGraded{V, G})}","page":"Library","title":"Base.real","text":"real(ω::TensorAlgebra)\n\nThe real part (ω+(~ω))/2 is defined by abs2(real(ω)) == real(ω)^2.\n\n\n\n\n\n","category":"method"},{"location":"library/#DirectSum.alloc","page":"Library","title":"DirectSum.alloc","text":"alloc(V::Manifold,:V,\"v\",\"w\",\"∂\",\"ϵ\")\n\nGenerates Basis declaration having Manifold specified by V. The first argument provides pseudoscalar specifications, the second argument is the variable name for the Manifold, and the third and fourth argument are variable prefixes of the Submanifold vector names (and covector basis names).\n\n\n\n\n\n","category":"function"},{"location":"library/#DirectSum.getbasis-Tuple{Any, Any}","page":"Library","title":"DirectSum.getbasis","text":"getbasis(V::Manifold,v)\n\nFetch a specific Submanifold{G,V} element from an optimal SubAlgebra{V} selection.\n\n\n\n\n\n","category":"method"},{"location":"library/#DirectSum.nameindex-Tuple{Int64}","page":"Library","title":"DirectSum.nameindex","text":"nameindex(V::Int) -> Int\n\nReturns a default name index for an integer input.\n\n\n\n\n\n","category":"method"},{"location":"library/#DirectSum.nameindex-Tuple{NTuple{4, String}}","page":"Library","title":"DirectSum.nameindex","text":"nameindex(a::NTuple{4, String}) -> Int\n\nGet a unique index for a set of name options, based on a cached result.\n\n\n\n\n\n","category":"method"},{"location":"library/#DirectSum.nameindex-Union{Tuple{T}, Tuple{D}, Tuple{F}, Tuple{S}, Tuple{M}, Tuple{N}, Tuple{Q}} where {Q, N, M, S, F, D, T<:TensorBundle{N, M, S, F, D, Q}}","page":"Library","title":"DirectSum.nameindex","text":"nameindex(V::T) -> Int\n\nReturns the name index for V when V is a TensorBundle or Manifold.\n\n\n\n\n\n","category":"method"},{"location":"library/#DirectSum.namelist-Tuple{Any}","page":"Library","title":"DirectSum.namelist","text":"namelist(V) -> String\n\nGet the cached name list for the options specified in V.\n\n\n\n\n\n","category":"method"},{"location":"library/#DirectSum.pseudoclifford","page":"Library","title":"DirectSum.pseudoclifford","text":"pseudoclifford(ω::TensorAlgebra)\n\nPseudo-clifford conjugate element: pseudoclifford(ω) = pseudoinvolute(pseudoreverse(ω))\n\n\n\n\n\n","category":"function"},{"location":"library/#DirectSum.pseudoinvolute","page":"Library","title":"DirectSum.pseudoinvolute","text":"pseudoinvolute(ω::TensorAlgebra)\n\nAnti-involute of an element: ~ω = (-1)^pseudograde(ω)*ω\n\n\n\n\n\n","category":"function"},{"location":"library/#DirectSum.pseudoreverse","page":"Library","title":"DirectSum.pseudoreverse","text":"pseudoreverse(ω::TensorAlgebra)\n\nAnti-reverse of an element: ~ω = (-1)^(pseudograde(ω)(pseudograde(ω)-1)/2)ω\n\n\n\n\n\n","category":"function"},{"location":"library/#DirectSum.tensorhash","page":"Library","title":"DirectSum.tensorhash","text":"tensorhash(d, o; c=0, C=0) -> Int\n\nCompute a unique integer representation for a set of options.\n\nArguments:\n\nd: Number of tangent variables (corresponds to ν).\no: Order of Leibniz-Taylor monomials multiplicity limit (corresponds to μ).\nc: Coefficient used to specify the metric (corresponds to g). Defaults to 0.\nC: Additional coefficient. Defaults to 0.\n\nReturns\n\nA unique integer representation that can be used as a cache key.\n\n\n\n\n\n","category":"function"},{"location":"library/#DirectSum.@basis","page":"Library","title":"DirectSum.@basis","text":"@basis\n\nGenerates Submanifold elements having Manifold specified by V. As a result of this macro, all of the Submanifold{V,G} elements generated by that TensorBundle become available in the local workspace with the specified naming. The first argument provides pseudoscalar specifications, the second argument is the variable name for the Manifold, and the third and fourth argument are variable prefixes of the Submanifold vector names (and covector basis names). Default for @basis M is @basis M V v w ∂ ϵ.\n\n\n\n\n\n","category":"macro"},{"location":"library/#DirectSum.@dualbasis","page":"Library","title":"DirectSum.@dualbasis","text":"@dualbasis\n\nGenerates Submanifold elements having Manifold specified by V'. As a result of this macro, all of the Submanifold{V',G} elements generated by that TensorBundle become available in the local workspace with the specified naming. The first argument provides pseudoscalar specifications, the second argument is the variable name for the dual Manifold, and the third and fourth argument are variable prefixes of the Submanifold covector names (and tensor field basis names). Default for @dualbasis M is @dualbasis M VV w ϵ.\n\n\n\n\n\n","category":"macro"},{"location":"library/#DirectSum.@mixedbasis","page":"Library","title":"DirectSum.@mixedbasis","text":"@mixedbasis\n\nGenerates Submanifold elements having Manifold specified by V⊕V'. As a result of this macro, all of the Submanifold{V⊕V',G} elements generated by that TensorBundle become available in the local workspace with the specified naming. The first argument provides pseudoscalar specifications, the second argument is the variable name for the Manifold, and the third and fourth argument are variable prefixes of the Submanifold vector names (and covector basis names). Default for @mixedbasis M is @mixedbasis M V v w ∂ ϵ.\n\n\n\n\n\n","category":"macro"},{"location":"library/#Grassmann.AbstractSpinor","page":"Library","title":"Grassmann.AbstractSpinor","text":"AbstractSpinor{V,T} <: TensorMixed{V,T} <: TensorAlgebra{V,T}\n\nElements of TensorAlgebra having non-homogenous grade being a spinor in the abstract.\n\n\n\n\n\n","category":"type"},{"location":"library/#Grassmann.Chain-Union{Tuple{S}, Tuple{G}, Tuple{V}, Tuple{𝕂}} where {𝕂, V, G, S<:AbstractVector{𝕂}}","page":"Library","title":"Grassmann.Chain","text":"Chain{V,G,T} <: TensorGraded{V,G,T} <: TensorAlgebra{V,T}\n\nChain type with pseudoscalar V::Manifold, grade/rank G::Int, scalar field T::Type.\n\n\n\n\n\n","category":"method"},{"location":"library/#Grassmann.ChainBundle","page":"Library","title":"Grassmann.ChainBundle","text":"ChainBundle{V,G,T,P} <: Manifold{V,T} <: TensorAlgebra{V,T}\n\nSubsets of a bundle cross-section over a Manifold topology.\n\n\n\n\n\n","category":"type"},{"location":"library/#Grassmann.CoSpinor-Union{Tuple{Submanifold{V}}, Tuple{V}} where V","page":"Library","title":"Grassmann.CoSpinor","text":"CoSpinor{V,T} <: AbstractSpinor{V,T} <: TensorAlgebra{V,T}\n\nPsuedoSpinor (odd grade) type with pseudoscalar V::Manifold and scalar T::Type.\n\n\n\n\n\n","category":"method"},{"location":"library/#Grassmann.Couple","page":"Library","title":"Grassmann.Couple","text":"Couple{V,B,T} <: AbstractSpinor{V,T} <: TensorAlgebra{V,T}\n\nPair of values with V::Manifold, basis B::Submanifold, scalar field of T::Type.\n\n\n\n\n\n","category":"type"},{"location":"library/#Grassmann.Multivector-Union{Tuple{S}, Tuple{V}, Tuple{T}} where {T, V, S<:AbstractVector{T}}","page":"Library","title":"Grassmann.Multivector","text":"Multivector{V,T} <: TensorMixed{V,T} <: TensorAlgebra{V,T}\n\nChain type with pseudoscalar V::Manifold and scalar field T::Type.\n\n\n\n\n\n","category":"method"},{"location":"library/#Grassmann.Phasor","page":"Library","title":"Grassmann.Phasor","text":"Phasor{V,B,T} <: AbstractSpinor{V,T} <: TensorAlgebra{V,T}\n\nMagnitude/phase angle with V::Manifold, basis B::Submanifold, scalar field T::Type.\n\n\n\n\n\n","category":"type"},{"location":"library/#Grassmann.PseudoCouple","page":"Library","title":"Grassmann.PseudoCouple","text":"PseudoCouple{V,B,T} <: AbstractSpinor{V,T} <: TensorAlgebra{V,T}\n\nPair of values with V::Manifold, basis B::Submanifold, pseudoscalar of T::Type.\n\n\n\n\n\n","category":"type"},{"location":"library/#Grassmann.Spinor-Union{Tuple{Submanifold{V}}, Tuple{V}} where V","page":"Library","title":"Grassmann.Spinor","text":"Spinor{V,T} <: AbstractSpinor{V,T} <: TensorAlgebra{V,T}\n\nSpinor (even grade) type with pseudoscalar V::Manifold and scalar field T::Type.\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractLattices.:∧-Union{Tuple{Y}, Tuple{X}, Tuple{X, Y}} where {X<:TensorAlgebra, Y<:TensorAlgebra}","page":"Library","title":"AbstractLattices.:∧","text":"∧(ω::TensorAlgebra,η::TensorAlgebra)\n\nExterior product as defined by the anti-symmetric quotient Λ≡⊗/~\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractLattices.:∨-Union{Tuple{Y}, Tuple{X}, Tuple{X, Y}} where {X<:TensorAlgebra, Y<:TensorAlgebra}","page":"Library","title":"AbstractLattices.:∨","text":"∨(ω::TensorAlgebra,η::TensorAlgebra)\n\nRegressive product as defined by the DeMorgan's law: ∨(ω...) = ⋆⁻¹(∧(⋆.(ω)...))\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.:∗","page":"Library","title":"AbstractTensors.:∗","text":"∗(ω::TensorAlgebra,η::TensorAlgebra)\n\nReversed geometric product: ω∗η = (~ω)*η\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.:⊘","page":"Library","title":"AbstractTensors.:⊘","text":"⊘(ω::TensorAlgebra,η::TensorAlgebra)\n\nGeneral sandwich product: ω⊘η = reverse(η)⊖ω⊖involute(η)\n\nFor normalized even grade η it is ω⊘η = (~η)⊖ω⊖η\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.:⊙-Tuple{Vararg{TensorAlgebra}}","page":"Library","title":"AbstractTensors.:⊙","text":"⊙(ω::TensorAlgebra,η::TensorAlgebra)\n\nSymmetrization projection: ⊙(ω...) = ∑(∏(σ.(ω)...))/factorial(length(ω))\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.:⊠-Tuple{Vararg{TensorAlgebra}}","page":"Library","title":"AbstractTensors.:⊠","text":"⊠(ω::TensorAlgebra,η::TensorAlgebra)\n\nAnti-symmetrization projection: ⊠(ω...) = ∑(∏(πσ.(ω)...))/factorial(length(ω))\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.:⟑-Union{Tuple{V}, Tuple{Submanifold{V}, Submanifold{V}}} where V","page":"Library","title":"AbstractTensors.:⟑","text":"*(ω::TensorAlgebra,η::TensorAlgebra)\n\nGeometric algebraic product: ω⊖η = (-1)ᵖdet(ω∩η)⊗(Λ(ω⊖η)∪L(ω⊕η))\n\n\n\n\n\n","category":"method"},{"location":"library/#AbstractTensors.contraction-Union{Tuple{V}, Tuple{Submanifold{V}, Submanifold{V}}} where V","page":"Library","title":"AbstractTensors.contraction","text":"contraction(ω::TensorAlgebra,η::TensorAlgebra)\n\nInterior (right) contraction product: ω⋅η = ω∨⋆η\n\n\n\n\n\n","category":"method"},{"location":"library/#Base.:&","page":"Library","title":"Base.:&","text":"∨(ω::TensorAlgebra,η::TensorAlgebra)\n\nRegressive product as defined by the DeMorgan's law: ∨(ω...) = ⋆⁻¹(∧(⋆.(ω)...))\n\n\n\n\n\n","category":"function"},{"location":"library/#Base.:>>>","page":"Library","title":"Base.:>>>","text":">>>(ω::TensorAlgebra,η::TensorAlgebra)\n\nTraditional sandwich product: ω>>>η = ω⊖η⊖clifford(ω)\n\nFor normalized even grade η it is ω>>>η = ω⊖η⊖(~ω)\n\n\n\n\n\n","category":"function"},{"location":"library/#Grassmann.betti-Tuple{T} where T<:TensorAlgebra","page":"Library","title":"Grassmann.betti","text":"betti(::TensorAlgebra)\n\nCompute the Betti numbers.\n\n\n\n\n\n","category":"method"},{"location":"library/#Grassmann.cayley","page":"Library","title":"Grassmann.cayley","text":"cayley(V,op=*)\n\nCompute the cayley table with op(a,b) for each Submanifold basis of V.\n\n\n\n\n\n","category":"function"},{"location":"library/#Grassmann.compact","page":"Library","title":"Grassmann.compact","text":"compactio(::Bool)\n\nToggles compact numbers for extended Grassmann elements (enabled by default)\n\n\n\n\n\n","category":"function"},{"location":"library/#LinearAlgebra.cross","page":"Library","title":"LinearAlgebra.cross","text":"cross(ω::TensorAlgebra,η::TensorAlgebra)\n\nCross product: ω×η = ⋆(ω∧η)\n\n\n\n\n\n","category":"function"},{"location":"library/#LinearAlgebra.dot","page":"Library","title":"LinearAlgebra.dot","text":"dot(ω::TensorAlgebra,η::TensorAlgebra)\n\nInterior (right) contraction product: ω⋅η = ω∨⋆η\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.complementleft","page":"Library","title":"AbstractTensors.complementleft","text":"complementleft(::TensorAlgebra)\n\nEuclidean metric variant Grassmann left complement.\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.complementlefthodge","page":"Library","title":"AbstractTensors.complementlefthodge","text":"complementlefthodge(ω::TensorAlgebra)\n\nGrassmann-Hodge left complement: ⋆'ω = I∗'ω\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.complementright","page":"Library","title":"AbstractTensors.complementright","text":"complementright(::TensorAlgebra)\n\nEuclidean metric variant of Grassmann right complement.\n\n\n\n\n\n","category":"function"},{"location":"library/#AbstractTensors.complementrighthodge","page":"Library","title":"AbstractTensors.complementrighthodge","text":"complementrighthodge(ω::TensorAlgebra)\n\nGrassmann-Hodge right complement: ⋆ω = ω∗I\n\n\n\n\n\n","category":"function"},{"location":"library/#Leibniz.bit2int-Tuple{BitVector}","page":"Library","title":"Leibniz.bit2int","text":"bit2int(b::BitVector) -> UInt\n\nTakes a BitVector and converts it to a corresponding unsigned integer representation.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.digitsfast-Tuple{Any, Int64}","page":"Library","title":"Leibniz.digitsfast","text":"digitsfast(b,N::Int) -> Values{N+1,Int}\n\nCalculates the digits of a binary number b up to length N.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.gdimsall-Tuple{Any}","page":"Library","title":"Leibniz.gdimsall","text":"gdimsall(N) -> Values{N+1,Int}\n\nReturns Values{N+1,Int} representing binomial coefficients from 0 to N.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.gdimseven-Tuple{Any}","page":"Library","title":"Leibniz.gdimseven","text":"gdimseven(N) -> Values\n\nReturns Values representing binomial coefficients for even values from 0 to N.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.gdimsodd-Tuple{Any}","page":"Library","title":"Leibniz.gdimsodd","text":"gdimsodd(N) -> Values\n\nReturns Values representing binomial coefficients for odd values from 1 to N.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.getbasis-Tuple{Any, Any}","page":"Library","title":"Leibniz.getbasis","text":"getbasis(V::Manifold,v)\n\nFetch a specific SubManifold{G,V} element from an optimal SubAlgebra{V} selection.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.indexbits-Union{Tuple{T}, Tuple{I}, Tuple{I, T}} where {I<:Integer, T<:Union{Tuple, Values, Vector{Int64}}}","page":"Library","title":"Leibniz.indexbits","text":"indexbits(N,indices) -> BitVector\n\nConverts a list of indices into a BitVector of length N, used to create an array where only the specified indices are set to true.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.indices-Tuple{UInt64}","page":"Library","title":"Leibniz.indices","text":"indices(b::UInt) -> Vector\nindices(b::UInt,N::UInt) -> Vector\n\nComputes the indices at which a binary number b has bits equal to 1. The N argument (optional) specifies the length of the binary representation.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.intlog-Tuple{Integer}","page":"Library","title":"Leibniz.intlog","text":"intlog(M::Integer) -> Int\n\nThis function computes the integer 2-logarithm of an integer.\n\n\n\n\n\n","category":"method"},{"location":"library/#Leibniz.χ-Tuple{T} where T<:TensorAlgebra","page":"Library","title":"Leibniz.χ","text":"χ(::TensorAlgebra)\n\nCompute the Euler characteristic χ = ∑ₚ(-1)ᵖbₚ.\n\n\n\n\n\n","category":"method"},{"location":"tutorials/install/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"Grassmann.jl is a package for the Julia language, which can be obtained from their website or the recommended method for your operating system (GNU/Linux/Mac/Windows). Go to docs.julialang.org for documentation.","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"Availability of this package and its subpackages is automatically handled with Julia's package manager using Pkg and Pkg.add(\"Grassmann\") or by entering into ] mode:","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"pkg> add Grassmann","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"If you would like to keep up to date with the latest commits, instead use","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"pkg> add Grassmann#master","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"which is not recommended if you want to use a stable release.","category":"page"},{"location":"tutorials/install/#Requirements","page":"Installation","title":"Requirements","text":"","category":"section"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"When the master branch is used it is possible that some of the dependencies also require a development branch before the release. This may include (but is not limited to) the following packages:","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"This requires a merged version of ComputedFieldTypes at ComputedFieldTypes.jl.","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"Interoperability of TensorAlgebra with other packages is enabled by DirectSum.jl and AbstractTensors.jl.","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"The package is compatible via Requires.jl with  Reduce.jl, SymPy.jl, SymEngine.jl, AbstractAlgebra.jl, Nemo.jl, GaloisFields.jl, LightGraphs.jl, Compose.jl, GeometryTypes.jl, Makie.jl.","category":"page"},{"location":"tutorials/install/#Grassmann-for-enterprise","page":"Installation","title":"Grassmann for enterprise","text":"","category":"section"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"Sponsor this at liberapay, GitHub Sponsors, Patreon, or Bandcamp; also available as part of the Tidelift Subscription:","category":"page"},{"location":"tutorials/install/","page":"Installation","title":"Installation","text":"The maintainers of Grassmann and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.","category":"page"},{"location":"tutorials/dyadic-tensors/#Dyadic-tensor-product","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"","category":"section"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Dyadic tensors are represented with the Grassmann’s exterior product algebra or nested Chain{V,1,Chain{V,1}} elements, generating a 2^2n-dimensional mother algebra with the direct sum of the n-dimensional vector space and its dual vector space. The product of the vector basis and covector basis elements form the n^2-dimensional bivector subspace of the full frac(2n)2(2n2)-dimensional bivector sub-algebra. The package Grassmann is working towards making the full extent of this number system available in Julia by using static compiled parametric type information to handle sparse sub-algebras, such as the dyadic (1,1)-tensor bivector algebra or mother algebra.","category":"page"},{"location":"tutorials/dyadic-tensors/#Nested-dyadic-algebra","page":"Dyadic tensor product ⊗","title":"Nested dyadic algebra","text":"","category":"section"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"In this algebra, it's possible to compute on a mesh of arbitrary 5 dimensional conformal geometric algebra simplices, which can be represented by a bundle of  nested dyadic tensors.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"using Grassmann, StaticArrays; basis\"+-+++\"\nvalue(rand(Chain{V,1,Chain{V,1}}))\nA = Chain{V,1}(rand(SMatrix{5,5}))","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Additionally, in Grassmann.jl we prefer the nested usage of pure ChainBundle parametric types for large re-usable global cell geometries, from which local dyadics can be selected.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Programming the A\\b method is straight forward with some Julia language metaprogramming and Grassmann.jl by first instantiating some Cramer symbols","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Base.@pure function Grassmann.Cramer(N::Int)\n    x,y = SVector{N}([Symbol(:x,i) for i ∈ 1:N]),SVector{N}([Symbol(:y,i) for i ∈ 1:N])\n    xy = [:(($(x[1+i]),$(y[1+i])) = ($(x[i])∧t[$(1+i)],t[end-$i]∧$(y[i]))) for i ∈ 1:N-1]\n    return x,y,xy\nend","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"These are exterior product variants of the Cramer determinant symbols (N times N-simplex hypervolumes), which can be combined to directly solve a linear system:","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"@generated function Base.:\\(t::Chain{V,1,<:Chain{V,1}},v::Chain{V,1}) where V\n    N = ndims(V)-1 # paste this into the REPL for faster eval\n    x,y,xy = Grassmann.Cramer(N)\n    mid = [:($(x[i])∧v∧$(y[end-i])) for i ∈ 1:N-1]\n    out = Expr(:call,:SVector,:(v∧$(y[end])),mid...,:($(x[end])∧v))\n    return Expr(:block,:((x1,y1)=(t[1],t[end])),xy...,\n        :(Chain{V,1}(getindex.($(Expr(:call,:./,out,:(t[1]∧$(y[end])))),1))))\nend","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Which results in the following highly efficient @generated code for solving the linear system,","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"(x1, y1) = (t[1], t[end])\n(x2, y2) = (x1 ∧ t[2], t[end - 1] ∧ y1)\n(x3, y3) = (x2 ∧ t[3], t[end - 2] ∧ y2)\n(x4, y4) = (x3 ∧ t[4], t[end - 3] ∧ y3)\nChain{V, 1}(getindex.(SVector(v ∧ y4, (x1 ∧ v) ∧ y3, (x2 ∧ v) ∧ y2, (x3 ∧ v) ∧ y1, x4 ∧ v) ./ (t[1] ∧ y4), 1))","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Benchmarks with that algebra indicate a 3times faster performance than SMatrix for applying A\\b to bundles of dyadic elements.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"julia> @btime $(rand(SMatrix{5,5},10000)).\\Ref($(SVector(1,2,3,4,5)));\n  2.588 ms (29496 allocations: 1.44 MiB)\n\njulia> @btime $(Chain{V,1}.(rand(SMatrix{5,5},10000))).\\$(v1+2v2+3v3+4v4+5v5);\n  808.631 μs (2 allocations: 390.70 KiB)\n\njulia> @btime $(SMatrix(A))\\$(SVector(1,2,3,4,5))\n  150.663 ns (0 allocations: 0 bytes)\n5-element SArray{Tuple{5},Float64,1,5} with indices SOneTo(5):\n -4.783720495603508\n  6.034887114999602\n  1.017847212237964\n  6.379374861538397\n -4.158116538111051\n\njulia> @btime $A\\$(v1+2v2+3v3+4v4+5v5)\n  72.405 ns (0 allocations: 0 bytes)\n-4.783720495603519v₁ + 6.034887114999605v₂ + 1.017847212237964v₃ + 6.379374861538393v₄ - 4.1581165381110505v₅","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Such a solution is not only more efficient than Julia's StaticArrays.jl method for SMatrix, but is also useful to minimize allocations in Grassmann.jl finite element assembly.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Similarly, the Cramer symbols can also be manipulated to invert the linear system or for determining whether a point is within a simplex.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"using Grassmann; @basis ℝ3\nT = Chain{V,1}(Chain(v1),v1+v2,v1+v3)\nbarycenter(T) ∈ T, (v1+v2+v3) ∈ T","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Of course, there are multiple equivalent ways of computing the same results using the ⋅ and : dyadic products.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"T\\barycenter(T) == inv(T)⋅barycenter(T)\nsqrt(T:T) == norm(SMatrix(T))","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"It is possible to generate a Makie.jl streamplot diagrams with the Grassmann.Cramer method for interpolated data of finite element solutions.","category":"page"},{"location":"tutorials/dyadic-tensors/#Mother-algebra-formalism","page":"Dyadic tensor product ⊗","title":"Mother algebra formalism","text":"","category":"section"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Note that Λ(ℝ3) gives the vector basis, and Λ(ℝ3)' gives the covector basis:","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Λ(ℝ3)\nΛ(ℝ3)'","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"The following command yields a local 2D vector and covector basis,","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"@mixedbasis ℝ2\nw1+2w2\nans(v1+v2)","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"The sum w1+2w2 is interpreted as a covector element of the dual vector space, which can be evaluated as a linear functional when a vector argument is input. Using these in the workspace, it is possible to use the Grassmann exterior wedge-tensor product operation to construct elements ℒ of the dyadic (1,1)-bivector subspace of linear transformations from the mother algebra.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"ℒ = (v1+2v2)∧(3w1+4w2)","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"The element ℒ is a linear form which can be evaluated,","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"ℒ(v1+v2)\nL = [1,2] * [3,4]'; L * [1,1]","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"which is a computation equivalent to a matrix computation.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"The TensorAlgebra evalution is still a work in progress, and the API and implementation may change as more features and algebraic operations and product structure are added.","category":"page"},{"location":"tutorials/dyadic-tensors/#Importing-the-Leech-lattice-generator","page":"Dyadic tensor product ⊗","title":"Importing the Leech lattice generator","text":"","category":"section"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"In the example below, we define a constant Leech which can be used to obtain linear combinations of the Leech lattice,","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"julia> using Grassmann\n\njulia> generator = [8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       2 2 2 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0;\n       2 2 2 2 0 0 0 0 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0;\n       2 2 0 0 2 2 0 0 2 2 0 0 2 2 0 0 0 0 0 0 0 0 0 0;\n       2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 0 0 0 0 0 0 0 0;\n       2 0 0 2 2 0 0 2 2 0 0 2 2 0 0 2 0 0 0 0 0 0 0 0;\n       4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0;\n       2 0 2 0 2 0 0 2 2 2 0 0 0 0 0 0 2 2 0 0 0 0 0 0;\n       2 0 0 2 2 2 0 0 2 0 2 0 0 0 0 0 2 0 2 0 0 0 0 0;\n       2 2 0 0 2 0 2 0 2 0 0 2 0 0 0 0 2 0 0 2 0 0 0 0;\n       0 2 2 2 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0;\n       0 0 0 0 0 0 0 0 2 2 0 0 2 2 0 0 2 2 0 0 2 2 0 0;\n       0 0 0 0 0 0 0 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0;\n       -3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n\njulia> const E24,W24 = Λ(24), ℝ^24⊕(ℝ^24)';\n\njulia> const Leech = Chain{Submanifold(W24),Float64}(generator./sqrt(8));\n\njulia> typeof(Leech)\nChain{⟨++++++++++++++++++++++++------------------------⟩*,2,Float64,1128}\n\njulia> ndims(Manifold(Leech))\n48","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"The Leech generator matrix is contained in the 1128-dimensional bivector subalgebra of the space with 48 indices.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"julia> Leech(E24.v1)\n2.82842712474619v₁ + 0.0v₂ + 0.0v₃ + 0.0v₄ + 0.0v₅ + 0.0v₆ + 0.0v₇ + 0.0v₈ + 0.0v₉ + 0.0v₀ + 0.0va + 0.0vb + 0.0vc + 0.0vd + 0.0ve + 0.0vf + 0.0vg + 0.0vh + 0.0vi + 0.0vj + 0.0vk + 0.0vl + 0.0vm + 0.0vn + 0.0w¹ + 0.0w² + 0.0w³ + 0.0w⁴ + 0.0w⁵ + 0.0w⁶ + 0.0w⁷ + 0.0w⁸ + 0.0w⁹ + 0.0w⁰ + 0.0wA + 0.0wB + 0.0wC + 0.0wD + 0.0wE + 0.0wF + 0.0wG + 0.0wH + 0.0wI + 0.0wJ + 0.0wK + 0.0wL + 0.0wM + 0.0wN\n\njulia> Leech(E24.v2)\n1.414213562373095v₁ + 1.414213562373095v₂ + 0.0v₃ + 0.0v₄ + 0.0v₅ + 0.0v₆ + 0.0v₇ + 0.0v₈ + 0.0v₉ + 0.0v₀ + 0.0va + 0.0vb + 0.0vc + 0.0vd + 0.0ve + 0.0vf + 0.0vg + 0.0vh + 0.0vi + 0.0vj + 0.0vk + 0.0vl + 0.0vm + 0.0vn + 0.0w¹ + 0.0w² + 0.0w³ + 0.0w⁴ + 0.0w⁵ + 0.0w⁶ + 0.0w⁷ + 0.0w⁸ + 0.0w⁹ + 0.0w⁰ + 0.0wA + 0.0wB + 0.0wC + 0.0wD + 0.0wE + 0.0wF + 0.0wG + 0.0wH + 0.0wI + 0.0wJ + 0.0wK + 0.0wL + 0.0wM + 0.0wN\n\njulia> Leech(E24.v3)\n1.414213562373095v₁ + 0.0v₂ + 1.414213562373095v₃ + 0.0v₄ + 0.0v₅ + 0.0v₆ + 0.0v₇ + 0.0v₈ + 0.0v₉ + 0.0v₀ + 0.0va + 0.0vb + 0.0vc + 0.0vd + 0.0ve + 0.0vf + 0.0vg + 0.0vh + 0.0vi + 0.0vj + 0.0vk + 0.0vl + 0.0vm + 0.0vn + 0.0w¹ + 0.0w² + 0.0w³ + 0.0w⁴ + 0.0w⁵ + 0.0w⁶ + 0.0w⁷ + 0.0w⁸ + 0.0w⁹ + 0.0w⁰ + 0.0wA + 0.0wB + 0.0wC + 0.0wD + 0.0wE + 0.0wF + 0.0wG + 0.0wH + 0.0wI + 0.0wJ + 0.0wK + 0.0wL + 0.0wM + 0.0wN\n\n...","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"Then a TensorAlgebra evaluation of Leech at an Integer linear combination would be","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"julia> Leech(E24.v1 + 2*E24.v2)\n5.65685424949238v₁ + 2.82842712474619v₂ + 0.0v₃ + 0.0v₄ + 0.0v₅ + 0.0v₆ + 0.0v₇ + 0.0v₈ + 0.0v₉ + 0.0v₀ + 0.0va + 0.0vb + 0.0vc + 0.0vd + 0.0ve + 0.0vf + 0.0vg + 0.0vh + 0.0vi + 0.0vj + 0.0vk + 0.0vl + 0.0vm + 0.0vn + 0.0w¹ + 0.0w² + 0.0w³ + 0.0w⁴ + 0.0w⁵ + 0.0w⁶ + 0.0w⁷ + 0.0w⁸ + 0.0w⁹ + 0.0w⁰ + 0.0wA + 0.0wB + 0.0wC + 0.0wD + 0.0wE + 0.0wF + 0.0wG + 0.0wH + 0.0wI + 0.0wJ + 0.0wK + 0.0wL + 0.0wM + 0.0wN\n\njulia> ans⋅ans\n39.99999999999999v\n\njulia> Leech(E24.v2 + E24.v5)\n2.82842712474619v₁ + 1.414213562373095v₂ + 0.0v₃ + 0.0v₄ + 0.0v₅ + 0.0v₆ + 0.0v₇ + 0.0v₈ + 0.0v₉ + 0.0v₀ + 1.414213562373095va + 0.0vb + 0.0vc + 0.0vd + 0.0ve + 0.0vf + 0.0vg + 0.0vh + 0.0vi + 0.0vj + 0.0vk + 0.0vl + 0.0vm + 0.0vn + 0.0w¹ + 0.7071067811865475w² + 1.414213562373095w³ + 1.414213562373095w⁴ + 0.0w⁵ + 0.0w⁶ + 0.0w⁷ + 0.0w⁸ + 0.0w⁹ + 0.0w⁰ + 0.0wA + 0.0wB + 0.0wC + 0.0wD + 0.0wE + 0.0wF + 0.0wG + 0.0wH + 0.0wI + 0.0wJ + 0.0wK + 0.0wL + 0.0wM + 0.0wN\n\njulia> ans⋅ans\n7.499999999999998v","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"The Grassmann package is designed to smoothly handle high-dimensional bivector algebras with headroom to spare. Although some of these calculations may have an initial delay, repeated calls are fast due to built-in caching and pre-compilation.","category":"page"},{"location":"tutorials/dyadic-tensors/","page":"Dyadic tensor product ⊗","title":"Dyadic tensor product ⊗","text":"In future updates, more emphasis will be placed on increased type-stability with more robust sparse output allocation in the computational graph and minimal footprint but maximal type-stability for intermediate results and output.","category":"page"},{"location":"design/#TensorAlgebra{V}-design-and-code-generation","page":"Design","title":"TensorAlgebra{V} design and code generation","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"Mathematical foundations and definitions specific to the Grassmann.jl implementation provide an extensible platform for computing with a universal language for finite element methods based on a discrete manifold bundle.  Tools built on these foundations enable computations based on multi-linear algebra and spin groups using the geometric algebra known as Grassmann algebra or Clifford algebra. This foundation is built on a DirectSum.jl parametric type system for tangent bundles and vector spaces generating the algorithms for local tangent algebras in a global context. With this unifying mathematical foundation, it is possible to improve efficiency of multi-disciplinary research using geometric tensor calculus by relying on universal mathematical principles.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"AbstractTensors.jl: Tensor algebra abstract type interoperability setup\nDirectSum.jl: Tangent bundle, vector space and Submanifold definition\nGrassmann.jl: ⟨Grassmann-Clifford-Hodge⟩ multilinear differential geometric algebra","category":"page"},{"location":"design/#Direct-sum-parametric-type-polymorphism","page":"Design","title":"Direct sum parametric type polymorphism","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"(Image: DOI) (Image: GitHub release (latest SemVer)) (Image: GitHub commits since latest release) (Image: Build status)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"The DirectSum.jl package is a work in progress providing the necessary tools to work with an arbitrary Manifold specified by an encoding. Due to the parametric type system for the generating TensorBundle, the Julia compiler can fully preallocate and often cache values efficiently ahead of run-time. Although intended for use with the Grassmann.jl package, DirectSum can be used independently.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Let M = T^mu V be a mathbbK-module of rank n, then an instance for T^mu V can be the tuple (nmathbbPgnumu) with mathbbPsubseteq langle v_inftyv_emptysetrangle specifying the presence of the projective basis and gVtimes VrightarrowmathbbK is a metric tensor specification. The type TensorBundle{n,mathbbP,g,nu,mu} encodes this information as byte-encoded data available at pre-compilation, where mu is an integer specifying the order of the tangent bundle (i.e. multiplicity limit of the Leibniz-Taylor monomials). Lastly, nu is the number of tangent variables.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"langle v_1dotsv_n-nupartial_1dotspartial_nurangle=Mleftrightarrow M = langle w_1dotsw_n-nuepsilon_1dotsepsilon_nurangle","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"where v_i and w_i are bases for the vectors and covectors, while partial_i and epsilon_j are bases for differential operators and scalar functions. The purpose of the TensorBundle type is to specify the mathbbK-module basis at compile time. When assigned in a workspace, V = Submanifold(::TensorBundle) is used.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"The metric signature of the Submanifold{V,1} elements of a vector space V can be specified with the V\"...\" by using + or - to specify whether the Submanifold{V,1} element of the corresponding index squares to +1 or -1. For example, S\"+++\" constructs a positive definite 3-dimensional TensorBundle, so constructors such as S\"...\" and D\"...\" are convenient.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"ℝ^3 == V\"+++\" == Manifold(3)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"It is also possible to change the diagonal scaling, such as with D\"1,1,1,0\", although the Signature format has a more compact representation if limited to +1 and -1. It is also possible to change the diagonal scaling, such as with D\"0.3,2.4,1\". Fully general MetricTensor as a type with non-diagonal components requires a matrix, e.g. MetricTensor([1 2; 2 3]).","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Declaring an additional point at infinity is done by specifying it in the string constructor with infty at the first index (i.e. Riemann sphere S\"∞+++\"). The hyperbolic geometry can be declared by emptyset subsequently (i.e. hyperbolic projection S\"∞+++\"). Additionally, the null-basis based on the projective split for conformal geometric algebra would be specified with S\"∞∅+++\". These two declared basis elements are interpreted in the type system. The tangent(V,μ,ν)  map can be used to specify mu and nu.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"To assign V = Submanifold(::TensorBundle) along with associated basis elements of the DirectSum.Basis to the local Julia session workspace, it is typical to use Submanifold elements created by the @basis macro,","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"using Grassmann; @basis S\"-++\" # macro or basis\"-++\"","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"the macro @basis V delcares a local basis in Julia. As a result of this macro, all Submanifold{V,G} elements generated with M::TensorBundle become available in the local workspace with the specified naming arguments. The first argument provides signature specifications, the second argument is the variable name for V the mathbbK-module, and the third and fourth argument are prefixes of the Submanifold vector names (and covector names). Default is V assigned Submanifold{M} and v is prefix for the Submanifold{V}.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"It is entirely possible to assign multiple different bases having different signatures without any problems. The @basis macro arguments are used to assign the vector space name to V and the basis elements to v_i, but other assigned names can be chosen so that their local names don't interfere: If it is undesirable to assign these variables to a local workspace, the versatile constructs of DirectSum.Basis{V} can be used to contain or access them, which is exported to the user as the method DirectSum.Basis(V).","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"DirectSum.Basis(V)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"V(::Int...) provides a convenient way to define a Submanifold by using integer indices to reference specific direct sums within the ambient space V.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"(ℝ^5)(3,5)\ndump(ans)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Here, calling a Manifold with a set of indices produces a Submanifold representation.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"The direct sum operator oplus can be used to join spaces (alternatively +), and the dual space functor  is an involution which toggles a dual vector space with inverted signature.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"V = ℝ'⊕ℝ^3\nV'\nW = V⊕V'","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"The direct sum of a TensorBundle and its dual Voplus V represents the full mother space V*.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"collect(V) # all Submanifold vector basis elements\ncollect(Submanifold(V')) # all covector basis elements\ncollect(Submanifold(W)) # all mixed basis elements","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"In addition to the direct-sum operation, several other operations are supported, such as cupcapsubseteqsupseteq for set operations. Due to the design of the TensorBundle dispatch, these operations enable code optimizations at compile-time provided by the bit parameters.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"ℝ⊕ℝ' ⊇ Manifold(1)\nℝ ∩ ℝ' == Manifold(0)\nℝ ∪ ℝ' == ℝ⊕ℝ'","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Operations on Manifold types is automatically handled at compile time.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"More information about DirectSum is available  at https://github.com/chakravala/DirectSum.jl","category":"page"},{"location":"design/#Higher-dimensions-with-SparseBasis-and-ExtendedBasis","page":"Design","title":"Higher dimensions with SparseBasis and ExtendedBasis","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"In order to work with a TensorAlgebra{V}, it is necessary for some computations to be cached. This is usually done automatically when accessed.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"julia> Λ(7) ⊕ Λ(7)'\nDirectSum.SparseBasis{⟨+++++++-------⟩*,16384}(v, ..., v₁₂₃₄₅₆₇w¹²³⁴⁵⁶⁷)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"One way of declaring the cache for all 3 combinations of a TensorBundle{N} and its dual is to ask for the sum Λ(V) + Λ(V)', which is equivalent to Λ(V⊕V'), but this does not initialize the cache of all 3 combinations unlike the former.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Staging of precompilation and caching is designed so that a user can smoothly transition between very high dimensional and low dimensional algebras in a single session, with varying levels of extra caching and optimizations. The parametric type formalism in Grassmann is highly expressive and enables pre-allocation of geometric algebra computations involving specific sparse subalgebras, including the representation of rotational groups.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"It is possible to reach elements with up to N=62 vertices from a TensorAlgebra having higher maximum dimensions than supported by Julia natively.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Λ(62)\nΛ(62).v32a87Ng","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"The 62 indices require full alpha-numeric labeling with lower-case and capital letters. This now allows you to reach up to 4611686018427387904 dimensions with Julia using Grassmann. Then the volume element is","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"using DirectSum # hide\nDirectSum.printindices(stdout,DirectSum.indices(UInt(2^62-1))) # hide","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Full Multivector allocations are only possible for Nleq22, but sparse operations are also available at higher dimensions. While DirectSum.Basis{V} is a container for the TensorAlgebra generators of V, the Basis is only cached for Nleq8. For the range of dimensions 8Nleq22, the SparseBasis type is used.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"julia> Λ(22)\nDirectSum.SparseBasis{⟨++++++++++++++++++++++⟩,4194304}(v, ..., v₁₂₃₄₅₆₇₈₉₀abcdefghijkl)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"This is the largest SparseBasis that can be generated with Julia, due to array size limitations.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"To reach higher dimensions with N22, the DirectSum.ExtendedBasis type is used. It is suficient to work with a 64-bit representation (which is the default). And it turns out that with 62 standard keyboard characters, this fits.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"V = ℝ^22\nΛ(V+V')","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"At 22 dimensions and lower there is better caching, with further extra caching for 8 dimensions or less. Thus, the largest Hilbert space that is fully reachable has 4,194,304 dimensions, but we can still reach out to 4,611,686,018,427,387,904 dimensions with the ExtendedBasis built in. It is still feasible to extend to a further super-extended 128-bit representation using the UInt128 type (but this will require further modifications of internals and helper functions. To reach into infinity even further, it is theoretically possible to construct ultra-extensions also using dictionaries. Full Multivector elements are not representable when ExtendedBasis is used, but the performance of the Basis and sparse elements should be just as fast as for lower dimensions for the current SubAlgebra and TensorAlgebra types. The sparse representations are a work in progress to be improved with time.","category":"page"},{"location":"design/#Interoperability-for-TensorAlgebra{V}","page":"Design","title":"Interoperability for TensorAlgebra{V}","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"(Image: DOI) (Image: GitHub release (latest SemVer)) (Image: GitHub commits since latest release) (Image: Build status)","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"The AbstractTensors package is intended for universal interoperation of the abstract TensorAlgebra type system. All TensorAlgebra{V} subtypes have type parameter V, used to store a Submanifold{M} value, which is parametrized by M the TensorBundle choice. This means that different tensor types can have a commonly shared underlying mathbbK-module parametric type expressed by defining V::Submanifold{M}. Each TensorAlgebra subtype must be accompanied by a corresponding TensorBundle parameter, which is fully static at compile time. Due to the parametric type system for the mathbbK-module types, the compiler can fully pre-allocate and often cache.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Since TensorBundle choices are fundamental to TensorAlgebra operations, the universal interoperability between TensorAlgebra{V} elements with different associated TensorBundle choices is naturally realized by applying the union morphism to operations, e.g. bigwedge Lambda^p_1V_1timesdotstimesLambda^p_gV_g rightarrow Lambda^sum_kp_kbigcup_k V_k. Some of the method names like +-*otimescircledastodotboxtimesstar for TensorAlgebra elements are shared across different packages, with interoperability.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"function op(::TensorAlgebra{V},::TensorAlgebra{V}) where V\n    # well defined operations if V is shared\nend # but what if V ≠ W in the input types?\n\nfunction op(a::TensorAlgebra{V},b::TensorAlgebra{W}) where {V,W}\n    VW = V ∪ W        # VectorSpace type union\n    op(VW(a),VW(b))   # makes call well-defined\nend # this option is automatic with interop(a,b)\n\n# alternatively for evaluation of forms, VW(a)(VW(b))","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Additionally, a universal unit volume element can be specified in terms of LinearAlgebra.UniformScaling, which is independent of V and has its interpretation only instantiated by context of TensorAlgebra{V} elements being operated on. Interoperability of LinearAlgebra.UniformScaling as a pseudoscalar element which takes on the TensorBundle form of any other TensorAlgebra element is handled globally. This enables the usage of I from LinearAlgebra as a universal pseudoscalar element defined at every point x of a Manifold, which is mathematically denoted by I = I(x) and specified by the g(x) bilinear tensor field of TM.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"More information about AbstractTensors is available  at https://github.com/chakravala/AbstractTensors.jl","category":"page"},{"location":"tutorials/quick-start/#Quick-start-(G2)","page":"Quick start (G2)","title":"Quick start (G2)","text":"","category":"section"},{"location":"tutorials/quick-start/","page":"Quick start (G2)","title":"Quick start (G2)","text":"Import the Grassmann package and instantiate a two-dimensional algebra (G2),","category":"page"},{"location":"tutorials/quick-start/","page":"Quick start (G2)","title":"Quick start (G2)","text":"using Grassmann\n@basis ℝ^2\nv1*v2 # geometric product\nv1|v2 # inner product\nv1∧v2 # exterior product","category":"page"},{"location":"tutorials/quick-start/#Reflection","page":"Quick start (G2)","title":"Reflection","text":"","category":"section"},{"location":"tutorials/quick-start/","page":"Quick start (G2)","title":"Quick start (G2)","text":"a = v1+v2\nn = v1\n-n*a/n # reflect a in hyperplane normal to n","category":"page"},{"location":"tutorials/quick-start/#Rotation","page":"Quick start (G2)","title":"Rotation","text":"","category":"section"},{"location":"tutorials/quick-start/","page":"Quick start (G2)","title":"Quick start (G2)","text":"R = exp(π/4*v12)\n~R*v1*R","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"                        Preamble","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The precise terms and conditions for copying, distribution and modification follow.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"                   TERMS AND CONDITIONS","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Definitions.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"\"This License\" refers to version 3 of the GNU Affero General Public License.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"\"The Program\" refers to any copyrightable work licensed under this License.  Each licensee is addressed as \"you\".  \"Licensees\" and \"recipients\" may be individuals or organizations.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A \"covered work\" means either the unmodified Program or a work based on the Program.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Source Code.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The \"source code\" for a work means the preferred form of the work for making modifications to it.  \"Object code\" means any non-source form of a work.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The Corresponding Source for a work in source code form is that same work.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Basic Permissions.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Protecting Users' Legal Rights From Anti-Circumvention Law.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Conveying Verbatim Copies.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Conveying Modified Source Versions.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Conveying Non-Source Forms.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Additional Terms.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Termination.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Acceptance Not Required for Having Copies.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Automatic Licensing of Downstream Recipients.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Patents.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \"contributor version\".","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"No Surrender of Others' Freedom.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Remote Network Interaction; Use with the GNU General Public License.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Revised Versions of this License.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Disclaimer of Warranty.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Limitation of Liability.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Interpretation of Sections 15 and 16.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"Also add information on how to contact you by electronic and paper mail.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a \"Source\" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.","category":"page"},{"location":"agpl/","page":"AGPL-3.0","title":"AGPL-3.0","text":"You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/.","category":"page"},{"location":"#Grassmann.jl","page":"Home","title":"Grassmann.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"⟨Grassmann-Clifford-Hodge⟩ multilinear differential geometric algebra","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: JuliaCon 2019) (Image: Grassmann.jl YouTube) (Image: PDF 2019) (Image: PDF 2021) (Image: PDF 2025) (Image: DOI) (Image: Gitter)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Grassmann.jl package provides tools for computations based on multi-linear algebra and spin groups using the extended geometric algebra known as Grassmann-Clifford-Hodge algebra. Algebra operations include exterior, regressive, inner, and geometric, along with the Hodge star and boundary operators. Code generation enables concise usage of the algebra syntax. DirectSum.jl multivector parametric type polymorphism is based on tangent vector spaces and conformal projective geometry. Additionally, the universal interoperability between different sub-algebras is enabled by AbstractTensors.jl, on which the type system is built. The design is based on TensorAlgebra{V} abstract type interoperability from AbstractTensors.jl with a mathbbK-module type parameter V from DirectSum.jl. Abstract vector space type operations happen at compile-time, resulting in a differential geometric algebra of multivector forms.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"design.md\",\"algebra.md\",\"videos.md\",\"library.md\",\"references.md\"]","category":"page"},{"location":"","page":"Home","title":"Home","text":"This Grassmann package for the Julia language was created by github.com/chakravala for mathematics and computer algebra research with differential geometric algebras. These projects and repositories were started entirely independently and are available as free software to help spread the ideas to a wider audience. Please consider donating to show your thanks and appreciation to this project at liberapay, GitHub Sponsors, Patreon, Tidelift, Bandcamp or contribute (documentation, tests, examples) in the repositories.","category":"page"}]
}
